<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1a2 (Python 3.7.0 on win32)" generated="20181210 17:50:10.853" rpa="false">
<suite id="s1" name="TestSuites" source="C:\development\robot-scripts\DSA-USA\TestSuites">
<suite id="s1-s1" name="Admin" source="C:\development\robot-scripts\DSA-USA\TestSuites\Admin">
<suite id="s1-s1-s1" name="Admin ScoreCardConfiguration" source="C:\development\robot-scripts\DSA-USA\TestSuites\Admin\Admin_ScoreCardConfiguration.robot">
<test id="s1-s1-s1-t1" name="Operations on Driver Score Card Bonus tab under Admin Module">
<kw name="begin test" library="CommonKeywords" type="setup">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>about:blank</arg>
<arg>${Browser}</arg>
</arguments>
<msg timestamp="20181210 17:50:12.010" level="INFO">Opening browser 'gc' to base url 'about:blank'.</msg>
<status status="PASS" starttime="20181210 17:50:12.010" endtime="20181210 17:50:14.285"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20181210 17:50:14.285" endtime="20181210 17:50:15.421"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the active browser instance to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20181210 17:50:15.421" level="INFO">Opening url 'https://v7iq7:Elephant@9@mysit.gfs.com/driverSafety/#/'</msg>
<status status="PASS" starttime="20181210 17:50:15.421" endtime="20181210 17:50:31.856"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20181210 17:50:36.870" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20181210 17:50:31.856" endtime="20181210 17:50:36.870"></status>
</kw>
<status status="PASS" starttime="20181210 17:50:12.010" endtime="20181210 17:50:36.870"></status>
</kw>
<kw name="Go to Driver Score Card tab in Admin">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20181210 17:50:41.883" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20181210 17:50:36.870" endtime="20181210 17:50:41.883"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>//a[contains(text(),'Admin')]</arg>
</arguments>
<msg timestamp="20181210 17:50:41.883" level="INFO">Clicking element '//a[contains(text(),'Admin')]'.</msg>
<status status="PASS" starttime="20181210 17:50:41.883" endtime="20181210 17:50:42.055"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20181210 17:50:47.055" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20181210 17:50:42.055" endtime="20181210 17:50:47.055"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>//a[contains(text(),'Driver Scorecard Bonus')]</arg>
</arguments>
<msg timestamp="20181210 17:50:47.055" level="INFO">Clicking element '//a[contains(text(),'Driver Scorecard Bonus')]'.</msg>
<status status="PASS" starttime="20181210 17:50:47.055" endtime="20181210 17:50:49.616"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20181210 17:50:59.626" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20181210 17:50:49.616" endtime="20181210 17:50:59.626"></status>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<arguments>
<arg>//legend[contains(text(),'Driver Scorecard Rates')]</arg>
</arguments>
<msg timestamp="20181210 17:50:59.673" level="INFO">Current page contains element '//legend[contains(text(),'Driver Scorecard Rates')]'.</msg>
<status status="PASS" starttime="20181210 17:50:59.626" endtime="20181210 17:50:59.673"></status>
</kw>
<status status="PASS" starttime="20181210 17:50:36.870" endtime="20181210 17:50:59.673"></status>
</kw>
<kw name="Check If no configurations are set or equal to zero">
<kw name="Get Matching Xpath Count" library="SeleniumLibrary">
<doc>Deprecated. Use `Get Element Count` instead.</doc>
<arguments>
<arg>(//button[@id='remove'])</arg>
</arguments>
<assign>
<var>${No_Of_Remove_buttons}</var>
</assign>
<msg timestamp="20181210 17:50:59.689" level="INFO">${No_Of_Remove_buttons} = 10</msg>
<status status="PASS" starttime="20181210 17:50:59.673" endtime="20181210 17:50:59.689"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} &gt;= 0</arg>
<arg>Cleanup existing configuratins in Driver Score Card Bonus tab in admin module</arg>
</arguments>
<kw name="Cleanup existing configuratins in Driver Score Card Bonus tab in admin module">
<kw name="Get Matching Xpath Count" library="SeleniumLibrary">
<doc>Deprecated. Use `Get Element Count` instead.</doc>
<arguments>
<arg>(//button[@id='remove'])</arg>
</arguments>
<assign>
<var>${No_Of_Remove_buttons}</var>
</assign>
<msg timestamp="20181210 17:50:59.704" level="INFO">${No_Of_Remove_buttons} = 10</msg>
<status status="PASS" starttime="20181210 17:50:59.689" endtime="20181210 17:50:59.704"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} +1</arg>
</arguments>
<assign>
<var>${No_Of_Remove_buttons}</var>
</assign>
<msg timestamp="20181210 17:50:59.704" level="INFO">${No_Of_Remove_buttons} = 11</msg>
<status status="PASS" starttime="20181210 17:50:59.704" endtime="20181210 17:50:59.704"></status>
</kw>
<kw name="${i} IN RANGE [ ${No_Of_Remove_buttons} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:51:01.709" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:50:59.704" endtime="20181210 17:51:01.709"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} - 1</arg>
</arguments>
<assign>
<var>${No_Of_Remove_buttons}</var>
</assign>
<msg timestamp="20181210 17:51:01.709" level="INFO">${No_Of_Remove_buttons} = 10</msg>
<status status="PASS" starttime="20181210 17:51:01.709" endtime="20181210 17:51:01.709"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} == 0</arg>
</arguments>
<status status="PASS" starttime="20181210 17:51:01.709" endtime="20181210 17:51:01.709"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>(//button[@id='remove'])[${No_Of_Remove_buttons}]</arg>
</arguments>
<msg timestamp="20181210 17:51:01.709" level="INFO">Clicking button '(//button[@id='remove'])[10]'.</msg>
<status status="PASS" starttime="20181210 17:51:01.709" endtime="20181210 17:51:01.870"></status>
</kw>
<status status="PASS" starttime="20181210 17:50:59.704" endtime="20181210 17:51:01.870"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:51:03.876" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:01.870" endtime="20181210 17:51:03.876"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} - 1</arg>
</arguments>
<assign>
<var>${No_Of_Remove_buttons}</var>
</assign>
<msg timestamp="20181210 17:51:03.876" level="INFO">${No_Of_Remove_buttons} = 9</msg>
<status status="PASS" starttime="20181210 17:51:03.876" endtime="20181210 17:51:03.876"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} == 0</arg>
</arguments>
<status status="PASS" starttime="20181210 17:51:03.876" endtime="20181210 17:51:03.876"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>(//button[@id='remove'])[${No_Of_Remove_buttons}]</arg>
</arguments>
<msg timestamp="20181210 17:51:03.876" level="INFO">Clicking button '(//button[@id='remove'])[9]'.</msg>
<status status="PASS" starttime="20181210 17:51:03.876" endtime="20181210 17:51:04.036"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:01.870" endtime="20181210 17:51:04.036"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:51:06.037" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:04.036" endtime="20181210 17:51:06.037"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} - 1</arg>
</arguments>
<assign>
<var>${No_Of_Remove_buttons}</var>
</assign>
<msg timestamp="20181210 17:51:06.037" level="INFO">${No_Of_Remove_buttons} = 8</msg>
<status status="PASS" starttime="20181210 17:51:06.037" endtime="20181210 17:51:06.037"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} == 0</arg>
</arguments>
<status status="PASS" starttime="20181210 17:51:06.037" endtime="20181210 17:51:06.037"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>(//button[@id='remove'])[${No_Of_Remove_buttons}]</arg>
</arguments>
<msg timestamp="20181210 17:51:06.037" level="INFO">Clicking button '(//button[@id='remove'])[8]'.</msg>
<status status="PASS" starttime="20181210 17:51:06.037" endtime="20181210 17:51:06.206"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:04.036" endtime="20181210 17:51:06.206"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:51:08.213" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:06.206" endtime="20181210 17:51:08.213"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} - 1</arg>
</arguments>
<assign>
<var>${No_Of_Remove_buttons}</var>
</assign>
<msg timestamp="20181210 17:51:08.213" level="INFO">${No_Of_Remove_buttons} = 7</msg>
<status status="PASS" starttime="20181210 17:51:08.213" endtime="20181210 17:51:08.213"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} == 0</arg>
</arguments>
<status status="PASS" starttime="20181210 17:51:08.213" endtime="20181210 17:51:08.213"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>(//button[@id='remove'])[${No_Of_Remove_buttons}]</arg>
</arguments>
<msg timestamp="20181210 17:51:08.213" level="INFO">Clicking button '(//button[@id='remove'])[7]'.</msg>
<status status="PASS" starttime="20181210 17:51:08.213" endtime="20181210 17:51:08.381"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:06.206" endtime="20181210 17:51:08.381"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:51:10.394" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:08.381" endtime="20181210 17:51:10.394"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} - 1</arg>
</arguments>
<assign>
<var>${No_Of_Remove_buttons}</var>
</assign>
<msg timestamp="20181210 17:51:10.394" level="INFO">${No_Of_Remove_buttons} = 6</msg>
<status status="PASS" starttime="20181210 17:51:10.394" endtime="20181210 17:51:10.394"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} == 0</arg>
</arguments>
<status status="PASS" starttime="20181210 17:51:10.394" endtime="20181210 17:51:10.394"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>(//button[@id='remove'])[${No_Of_Remove_buttons}]</arg>
</arguments>
<msg timestamp="20181210 17:51:10.394" level="INFO">Clicking button '(//button[@id='remove'])[6]'.</msg>
<status status="PASS" starttime="20181210 17:51:10.394" endtime="20181210 17:51:10.546"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:08.381" endtime="20181210 17:51:10.546"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:51:12.549" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:10.546" endtime="20181210 17:51:12.549"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} - 1</arg>
</arguments>
<assign>
<var>${No_Of_Remove_buttons}</var>
</assign>
<msg timestamp="20181210 17:51:12.549" level="INFO">${No_Of_Remove_buttons} = 5</msg>
<status status="PASS" starttime="20181210 17:51:12.549" endtime="20181210 17:51:12.549"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} == 0</arg>
</arguments>
<status status="PASS" starttime="20181210 17:51:12.549" endtime="20181210 17:51:12.549"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>(//button[@id='remove'])[${No_Of_Remove_buttons}]</arg>
</arguments>
<msg timestamp="20181210 17:51:12.549" level="INFO">Clicking button '(//button[@id='remove'])[5]'.</msg>
<status status="PASS" starttime="20181210 17:51:12.549" endtime="20181210 17:51:12.690"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:10.546" endtime="20181210 17:51:12.690"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:51:14.693" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:12.691" endtime="20181210 17:51:14.693"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} - 1</arg>
</arguments>
<assign>
<var>${No_Of_Remove_buttons}</var>
</assign>
<msg timestamp="20181210 17:51:14.693" level="INFO">${No_Of_Remove_buttons} = 4</msg>
<status status="PASS" starttime="20181210 17:51:14.693" endtime="20181210 17:51:14.693"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} == 0</arg>
</arguments>
<status status="PASS" starttime="20181210 17:51:14.693" endtime="20181210 17:51:14.693"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>(//button[@id='remove'])[${No_Of_Remove_buttons}]</arg>
</arguments>
<msg timestamp="20181210 17:51:14.693" level="INFO">Clicking button '(//button[@id='remove'])[4]'.</msg>
<status status="PASS" starttime="20181210 17:51:14.693" endtime="20181210 17:51:14.844"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:12.690" endtime="20181210 17:51:14.844"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:51:16.852" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:14.844" endtime="20181210 17:51:16.852"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} - 1</arg>
</arguments>
<assign>
<var>${No_Of_Remove_buttons}</var>
</assign>
<msg timestamp="20181210 17:51:16.852" level="INFO">${No_Of_Remove_buttons} = 3</msg>
<status status="PASS" starttime="20181210 17:51:16.852" endtime="20181210 17:51:16.852"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} == 0</arg>
</arguments>
<status status="PASS" starttime="20181210 17:51:16.852" endtime="20181210 17:51:16.852"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>(//button[@id='remove'])[${No_Of_Remove_buttons}]</arg>
</arguments>
<msg timestamp="20181210 17:51:16.852" level="INFO">Clicking button '(//button[@id='remove'])[3]'.</msg>
<status status="PASS" starttime="20181210 17:51:16.852" endtime="20181210 17:51:17.021"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:14.844" endtime="20181210 17:51:17.021"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:51:19.027" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:17.021" endtime="20181210 17:51:19.027"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} - 1</arg>
</arguments>
<assign>
<var>${No_Of_Remove_buttons}</var>
</assign>
<msg timestamp="20181210 17:51:19.027" level="INFO">${No_Of_Remove_buttons} = 2</msg>
<status status="PASS" starttime="20181210 17:51:19.027" endtime="20181210 17:51:19.027"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} == 0</arg>
</arguments>
<status status="PASS" starttime="20181210 17:51:19.027" endtime="20181210 17:51:19.027"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>(//button[@id='remove'])[${No_Of_Remove_buttons}]</arg>
</arguments>
<msg timestamp="20181210 17:51:19.027" level="INFO">Clicking button '(//button[@id='remove'])[2]'.</msg>
<status status="PASS" starttime="20181210 17:51:19.027" endtime="20181210 17:51:19.176"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:17.021" endtime="20181210 17:51:19.176"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:51:21.190" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:19.177" endtime="20181210 17:51:21.190"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} - 1</arg>
</arguments>
<assign>
<var>${No_Of_Remove_buttons}</var>
</assign>
<msg timestamp="20181210 17:51:21.190" level="INFO">${No_Of_Remove_buttons} = 1</msg>
<status status="PASS" starttime="20181210 17:51:21.190" endtime="20181210 17:51:21.190"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} == 0</arg>
</arguments>
<status status="PASS" starttime="20181210 17:51:21.190" endtime="20181210 17:51:21.190"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>(//button[@id='remove'])[${No_Of_Remove_buttons}]</arg>
</arguments>
<msg timestamp="20181210 17:51:21.190" level="INFO">Clicking button '(//button[@id='remove'])[1]'.</msg>
<status status="PASS" starttime="20181210 17:51:21.190" endtime="20181210 17:51:21.329"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:19.177" endtime="20181210 17:51:21.329"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:51:23.342" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:21.329" endtime="20181210 17:51:23.342"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} - 1</arg>
</arguments>
<assign>
<var>${No_Of_Remove_buttons}</var>
</assign>
<msg timestamp="20181210 17:51:23.342" level="INFO">${No_Of_Remove_buttons} = 0</msg>
<status status="PASS" starttime="20181210 17:51:23.342" endtime="20181210 17:51:23.342"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${No_Of_Remove_buttons} == 0</arg>
</arguments>
<msg timestamp="20181210 17:51:23.342" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20181210 17:51:23.342" endtime="20181210 17:51:23.342"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:21.329" endtime="20181210 17:51:23.342"></status>
</kw>
<status status="PASS" starttime="20181210 17:50:59.704" endtime="20181210 17:51:23.342"></status>
</kw>
<status status="PASS" starttime="20181210 17:50:59.689" endtime="20181210 17:51:23.342"></status>
</kw>
<status status="PASS" starttime="20181210 17:50:59.689" endtime="20181210 17:51:23.342"></status>
</kw>
<status status="PASS" starttime="20181210 17:50:59.673" endtime="20181210 17:51:23.342"></status>
</kw>
<kw name="Add Driver Score Ranges from spread sheet">
<kw name="Open Excel" library="ExcelRobot">
<doc>Opens the Excel file to read from the path provided in the file path parameter.</doc>
<arguments>
<arg>${excelName}</arg>
</arguments>
<msg timestamp="20181210 17:51:23.342" level="INFO">Opening file at C:\Users\BLR153\Desktop\DSA Automation\DSA-USA-RFW\ScoreCardCnfigurations.xlsx</msg>
<status status="PASS" starttime="20181210 17:51:23.342" endtime="20181210 17:51:23.358"></status>
</kw>
<kw name="Get Sheet Names" library="ExcelRobot">
<doc>Returns the names of all the worksheets in the current workbook.</doc>
<assign>
<var>${NumberOfExcelSheets}</var>
</assign>
<msg timestamp="20181210 17:51:23.358" level="INFO">${NumberOfExcelSheets} = ['Sheet1', 'ScoreCardRangesToBeAdded']</msg>
<status status="PASS" starttime="20181210 17:51:23.358" endtime="20181210 17:51:23.358"></status>
</kw>
<kw name="Get Row Count" library="ExcelRobot">
<doc>Returns the specific number of rows of the sheet name specified.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
</arguments>
<assign>
<var>${nRowCount}</var>
</assign>
<msg timestamp="20181210 17:51:23.358" level="INFO">${nRowCount} = 11</msg>
<status status="PASS" starttime="20181210 17:51:23.358" endtime="20181210 17:51:23.358"></status>
</kw>
<kw name="Get Column Count" library="ExcelRobot">
<doc>Returns the specific number of columns of the sheet name specified.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
</arguments>
<assign>
<var>${nColCount}</var>
</assign>
<msg timestamp="20181210 17:51:23.358" level="INFO">${nColCount} = 7</msg>
<status status="PASS" starttime="20181210 17:51:23.358" endtime="20181210 17:51:23.358"></status>
</kw>
<kw name="${row} IN RANGE [ 1 | ${nRowCount} ]" type="for">
<kw name="${row} = 1" type="foritem">
<kw name="Reading data from spreadsheet">
<arguments>
<arg>${row}</arg>
</arguments>
<kw name="Open Excel" library="ExcelRobot">
<doc>Opens the Excel file to read from the path provided in the file path parameter.</doc>
<arguments>
<arg>${excelName}</arg>
</arguments>
<msg timestamp="20181210 17:51:23.358" level="INFO">Opening file at C:\Users\BLR153\Desktop\DSA Automation\DSA-USA-RFW\ScoreCardCnfigurations.xlsx</msg>
<status status="PASS" starttime="20181210 17:51:23.358" endtime="20181210 17:51:23.373"></status>
</kw>
<kw name="Get Sheet Names" library="ExcelRobot">
<doc>Returns the names of all the worksheets in the current workbook.</doc>
<assign>
<var>${NumberOfExcelSheets}</var>
</assign>
<msg timestamp="20181210 17:51:23.373" level="INFO">${NumberOfExcelSheets} = ['Sheet1', 'ScoreCardRangesToBeAdded']</msg>
<status status="PASS" starttime="20181210 17:51:23.373" endtime="20181210 17:51:23.373"></status>
</kw>
<kw name="Get Column Count" library="ExcelRobot">
<doc>Returns the specific number of columns of the sheet name specified.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
</arguments>
<assign>
<var>${nColCount}</var>
</assign>
<msg timestamp="20181210 17:51:23.373" level="INFO">${nColCount} = 7</msg>
<status status="PASS" starttime="20181210 17:51:23.373" endtime="20181210 17:51:23.373"></status>
</kw>
<kw name="${col} IN RANGE [ 0 | 1 ]" type="for">
<kw name="${col} = 0" type="foritem">
<kw name="Read Cell Data" library="ExcelRobot">
<doc>Uses the column and row to return the data from that cell.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
<arg>${col}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${CelData}</var>
</assign>
<msg timestamp="20181210 17:51:23.373" level="INFO">${CelData} = 1.00</msg>
<status status="PASS" starttime="20181210 17:51:23.373" endtime="20181210 17:51:23.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${MinScoreInput}</arg>
<arg>${CelData}</arg>
</arguments>
<msg timestamp="20181210 17:51:23.373" level="INFO">${MinScoreInput} = 1.00</msg>
<status status="PASS" starttime="20181210 17:51:23.373" endtime="20181210 17:51:23.373"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${col}+1</arg>
</arguments>
<assign>
<var>${col1}</var>
</assign>
<msg timestamp="20181210 17:51:23.373" level="INFO">${col1} = 1</msg>
<status status="PASS" starttime="20181210 17:51:23.373" endtime="20181210 17:51:23.373"></status>
</kw>
<kw name="Read Cell Data" library="ExcelRobot">
<doc>Uses the column and row to return the data from that cell.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
<arg>${col1}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${CelData2}</var>
</assign>
<msg timestamp="20181210 17:51:23.373" level="INFO">${CelData2} = 100.00</msg>
<status status="PASS" starttime="20181210 17:51:23.373" endtime="20181210 17:51:23.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${IncentiveAmount}</arg>
<arg>${CelData2}</arg>
</arguments>
<msg timestamp="20181210 17:51:23.373" level="INFO">${IncentiveAmount} = 100.00</msg>
<status status="PASS" starttime="20181210 17:51:23.373" endtime="20181210 17:51:23.373"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:23.373" endtime="20181210 17:51:23.373"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:23.373" endtime="20181210 17:51:23.373"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:23.358" endtime="20181210 17:51:23.373"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 s</arg>
</arguments>
<msg timestamp="20181210 17:51:25.382" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:23.373" endtime="20181210 17:51:25.382"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[@id='add']</arg>
</arguments>
<msg timestamp="20181210 17:51:25.382" level="INFO">Clicking button '//button[@id='add']'.</msg>
<status status="PASS" starttime="20181210 17:51:25.382" endtime="20181210 17:51:25.547"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:51:27.553" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:25.547" endtime="20181210 17:51:27.553"></status>
</kw>
<kw name="Page Should Contain Textfield" library="SeleniumLibrary">
<doc>Verifies text field ``locator`` is found from current page.</doc>
<arguments>
<arg>//input[@data-ng-model='range.minimumScoreNbrInput']</arg>
</arguments>
<msg timestamp="20181210 17:51:27.615" level="INFO">Current page contains text field '//input[@data-ng-model='range.minimumScoreNbrInput']'.</msg>
<status status="PASS" starttime="20181210 17:51:27.553" endtime="20181210 17:51:27.615"></status>
</kw>
<kw name="Element Should Be Disabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is disabled.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:51:27.615" endtime="20181210 17:51:27.631"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@id='cancel']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:51:27.631" endtime="20181210 17:51:27.662"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@data-ng-model='range.minimumScoreNbrInput']</arg>
<arg>${MinScoreInput}</arg>
</arguments>
<msg timestamp="20181210 17:51:27.662" level="INFO">Typing text '1.00' into text field '//input[@data-ng-model='range.minimumScoreNbrInput']'.</msg>
<status status="PASS" starttime="20181210 17:51:27.662" endtime="20181210 17:51:27.854"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20181210 17:51:28.855" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20181210 17:51:27.855" endtime="20181210 17:51:28.855"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@name='amountInput']</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<msg timestamp="20181210 17:51:28.857" level="INFO">Typing text '100.00' into text field '//input[@name='amountInput']'.</msg>
<status status="PASS" starttime="20181210 17:51:28.856" endtime="20181210 17:51:29.223"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:51:31.230" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:29.223" endtime="20181210 17:51:31.230"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:51:31.230" endtime="20181210 17:51:31.298"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<msg timestamp="20181210 17:51:31.299" level="INFO">Clicking element '//button[@id='save']'.</msg>
<status status="PASS" starttime="20181210 17:51:31.298" endtime="20181210 17:51:31.422"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20181210 17:51:34.423" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20181210 17:51:31.422" endtime="20181210 17:51:34.423"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:23.358" endtime="20181210 17:51:34.423"></status>
</kw>
<kw name="${row} = 2" type="foritem">
<kw name="Reading data from spreadsheet">
<arguments>
<arg>${row}</arg>
</arguments>
<kw name="Open Excel" library="ExcelRobot">
<doc>Opens the Excel file to read from the path provided in the file path parameter.</doc>
<arguments>
<arg>${excelName}</arg>
</arguments>
<msg timestamp="20181210 17:51:34.423" level="INFO">Opening file at C:\Users\BLR153\Desktop\DSA Automation\DSA-USA-RFW\ScoreCardCnfigurations.xlsx</msg>
<status status="PASS" starttime="20181210 17:51:34.423" endtime="20181210 17:51:34.423"></status>
</kw>
<kw name="Get Sheet Names" library="ExcelRobot">
<doc>Returns the names of all the worksheets in the current workbook.</doc>
<assign>
<var>${NumberOfExcelSheets}</var>
</assign>
<msg timestamp="20181210 17:51:34.423" level="INFO">${NumberOfExcelSheets} = ['Sheet1', 'ScoreCardRangesToBeAdded']</msg>
<status status="PASS" starttime="20181210 17:51:34.423" endtime="20181210 17:51:34.423"></status>
</kw>
<kw name="Get Column Count" library="ExcelRobot">
<doc>Returns the specific number of columns of the sheet name specified.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
</arguments>
<assign>
<var>${nColCount}</var>
</assign>
<msg timestamp="20181210 17:51:34.423" level="INFO">${nColCount} = 7</msg>
<status status="PASS" starttime="20181210 17:51:34.423" endtime="20181210 17:51:34.423"></status>
</kw>
<kw name="${col} IN RANGE [ 0 | 1 ]" type="for">
<kw name="${col} = 0" type="foritem">
<kw name="Read Cell Data" library="ExcelRobot">
<doc>Uses the column and row to return the data from that cell.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
<arg>${col}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${CelData}</var>
</assign>
<msg timestamp="20181210 17:51:34.438" level="INFO">${CelData} = 10.00</msg>
<status status="PASS" starttime="20181210 17:51:34.438" endtime="20181210 17:51:34.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${MinScoreInput}</arg>
<arg>${CelData}</arg>
</arguments>
<msg timestamp="20181210 17:51:34.438" level="INFO">${MinScoreInput} = 10.00</msg>
<status status="PASS" starttime="20181210 17:51:34.438" endtime="20181210 17:51:34.438"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${col}+1</arg>
</arguments>
<assign>
<var>${col1}</var>
</assign>
<msg timestamp="20181210 17:51:34.438" level="INFO">${col1} = 1</msg>
<status status="PASS" starttime="20181210 17:51:34.438" endtime="20181210 17:51:34.438"></status>
</kw>
<kw name="Read Cell Data" library="ExcelRobot">
<doc>Uses the column and row to return the data from that cell.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
<arg>${col1}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${CelData2}</var>
</assign>
<msg timestamp="20181210 17:51:34.438" level="INFO">${CelData2} = 101.00</msg>
<status status="PASS" starttime="20181210 17:51:34.438" endtime="20181210 17:51:34.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${IncentiveAmount}</arg>
<arg>${CelData2}</arg>
</arguments>
<msg timestamp="20181210 17:51:34.438" level="INFO">${IncentiveAmount} = 101.00</msg>
<status status="PASS" starttime="20181210 17:51:34.438" endtime="20181210 17:51:34.438"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:34.438" endtime="20181210 17:51:34.438"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:34.423" endtime="20181210 17:51:34.438"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:34.423" endtime="20181210 17:51:34.438"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 s</arg>
</arguments>
<msg timestamp="20181210 17:51:36.444" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:34.438" endtime="20181210 17:51:36.444"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[@id='add']</arg>
</arguments>
<msg timestamp="20181210 17:51:36.444" level="INFO">Clicking button '//button[@id='add']'.</msg>
<status status="PASS" starttime="20181210 17:51:36.444" endtime="20181210 17:51:36.595"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:51:38.596" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:36.596" endtime="20181210 17:51:38.596"></status>
</kw>
<kw name="Page Should Contain Textfield" library="SeleniumLibrary">
<doc>Verifies text field ``locator`` is found from current page.</doc>
<arguments>
<arg>//input[@data-ng-model='range.minimumScoreNbrInput']</arg>
</arguments>
<msg timestamp="20181210 17:51:38.645" level="INFO">Current page contains text field '//input[@data-ng-model='range.minimumScoreNbrInput']'.</msg>
<status status="PASS" starttime="20181210 17:51:38.597" endtime="20181210 17:51:38.645"></status>
</kw>
<kw name="Element Should Be Disabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is disabled.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:51:38.645" endtime="20181210 17:51:38.676"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@id='cancel']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:51:38.676" endtime="20181210 17:51:38.707"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@data-ng-model='range.minimumScoreNbrInput']</arg>
<arg>${MinScoreInput}</arg>
</arguments>
<msg timestamp="20181210 17:51:38.707" level="INFO">Typing text '10.00' into text field '//input[@data-ng-model='range.minimumScoreNbrInput']'.</msg>
<status status="PASS" starttime="20181210 17:51:38.707" endtime="20181210 17:51:38.917"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20181210 17:51:39.928" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20181210 17:51:38.918" endtime="20181210 17:51:39.928"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@name='amountInput']</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<msg timestamp="20181210 17:51:39.928" level="INFO">Typing text '101.00' into text field '//input[@name='amountInput']'.</msg>
<status status="PASS" starttime="20181210 17:51:39.928" endtime="20181210 17:51:40.208"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:51:42.214" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:40.208" endtime="20181210 17:51:42.214"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:51:42.214" endtime="20181210 17:51:42.261"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<msg timestamp="20181210 17:51:42.261" level="INFO">Clicking element '//button[@id='save']'.</msg>
<status status="PASS" starttime="20181210 17:51:42.261" endtime="20181210 17:51:42.385"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20181210 17:51:45.386" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20181210 17:51:42.385" endtime="20181210 17:51:45.386"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:34.423" endtime="20181210 17:51:45.386"></status>
</kw>
<kw name="${row} = 3" type="foritem">
<kw name="Reading data from spreadsheet">
<arguments>
<arg>${row}</arg>
</arguments>
<kw name="Open Excel" library="ExcelRobot">
<doc>Opens the Excel file to read from the path provided in the file path parameter.</doc>
<arguments>
<arg>${excelName}</arg>
</arguments>
<msg timestamp="20181210 17:51:45.386" level="INFO">Opening file at C:\Users\BLR153\Desktop\DSA Automation\DSA-USA-RFW\ScoreCardCnfigurations.xlsx</msg>
<status status="PASS" starttime="20181210 17:51:45.386" endtime="20181210 17:51:45.386"></status>
</kw>
<kw name="Get Sheet Names" library="ExcelRobot">
<doc>Returns the names of all the worksheets in the current workbook.</doc>
<assign>
<var>${NumberOfExcelSheets}</var>
</assign>
<msg timestamp="20181210 17:51:45.386" level="INFO">${NumberOfExcelSheets} = ['Sheet1', 'ScoreCardRangesToBeAdded']</msg>
<status status="PASS" starttime="20181210 17:51:45.386" endtime="20181210 17:51:45.386"></status>
</kw>
<kw name="Get Column Count" library="ExcelRobot">
<doc>Returns the specific number of columns of the sheet name specified.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
</arguments>
<assign>
<var>${nColCount}</var>
</assign>
<msg timestamp="20181210 17:51:45.402" level="INFO">${nColCount} = 7</msg>
<status status="PASS" starttime="20181210 17:51:45.386" endtime="20181210 17:51:45.402"></status>
</kw>
<kw name="${col} IN RANGE [ 0 | 1 ]" type="for">
<kw name="${col} = 0" type="foritem">
<kw name="Read Cell Data" library="ExcelRobot">
<doc>Uses the column and row to return the data from that cell.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
<arg>${col}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${CelData}</var>
</assign>
<msg timestamp="20181210 17:51:45.402" level="INFO">${CelData} = 20.00</msg>
<status status="PASS" starttime="20181210 17:51:45.402" endtime="20181210 17:51:45.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${MinScoreInput}</arg>
<arg>${CelData}</arg>
</arguments>
<msg timestamp="20181210 17:51:45.402" level="INFO">${MinScoreInput} = 20.00</msg>
<status status="PASS" starttime="20181210 17:51:45.402" endtime="20181210 17:51:45.402"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${col}+1</arg>
</arguments>
<assign>
<var>${col1}</var>
</assign>
<msg timestamp="20181210 17:51:45.402" level="INFO">${col1} = 1</msg>
<status status="PASS" starttime="20181210 17:51:45.402" endtime="20181210 17:51:45.402"></status>
</kw>
<kw name="Read Cell Data" library="ExcelRobot">
<doc>Uses the column and row to return the data from that cell.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
<arg>${col1}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${CelData2}</var>
</assign>
<msg timestamp="20181210 17:51:45.402" level="INFO">${CelData2} = 102.00</msg>
<status status="PASS" starttime="20181210 17:51:45.402" endtime="20181210 17:51:45.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${IncentiveAmount}</arg>
<arg>${CelData2}</arg>
</arguments>
<msg timestamp="20181210 17:51:45.402" level="INFO">${IncentiveAmount} = 102.00</msg>
<status status="PASS" starttime="20181210 17:51:45.402" endtime="20181210 17:51:45.402"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:45.402" endtime="20181210 17:51:45.402"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:45.402" endtime="20181210 17:51:45.402"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:45.386" endtime="20181210 17:51:45.402"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 s</arg>
</arguments>
<msg timestamp="20181210 17:51:47.405" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:45.402" endtime="20181210 17:51:47.405"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[@id='add']</arg>
</arguments>
<msg timestamp="20181210 17:51:47.405" level="INFO">Clicking button '//button[@id='add']'.</msg>
<status status="PASS" starttime="20181210 17:51:47.405" endtime="20181210 17:51:47.521"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:51:49.525" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:47.521" endtime="20181210 17:51:49.525"></status>
</kw>
<kw name="Page Should Contain Textfield" library="SeleniumLibrary">
<doc>Verifies text field ``locator`` is found from current page.</doc>
<arguments>
<arg>//input[@data-ng-model='range.minimumScoreNbrInput']</arg>
</arguments>
<msg timestamp="20181210 17:51:49.556" level="INFO">Current page contains text field '//input[@data-ng-model='range.minimumScoreNbrInput']'.</msg>
<status status="PASS" starttime="20181210 17:51:49.525" endtime="20181210 17:51:49.556"></status>
</kw>
<kw name="Element Should Be Disabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is disabled.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:51:49.556" endtime="20181210 17:51:49.588"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@id='cancel']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:51:49.588" endtime="20181210 17:51:49.619"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@data-ng-model='range.minimumScoreNbrInput']</arg>
<arg>${MinScoreInput}</arg>
</arguments>
<msg timestamp="20181210 17:51:49.619" level="INFO">Typing text '20.00' into text field '//input[@data-ng-model='range.minimumScoreNbrInput']'.</msg>
<status status="PASS" starttime="20181210 17:51:49.619" endtime="20181210 17:51:49.866"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20181210 17:51:50.882" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20181210 17:51:49.867" endtime="20181210 17:51:50.882"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@name='amountInput']</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<msg timestamp="20181210 17:51:50.882" level="INFO">Typing text '102.00' into text field '//input[@name='amountInput']'.</msg>
<status status="PASS" starttime="20181210 17:51:50.882" endtime="20181210 17:51:51.126"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:51:53.133" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:51.126" endtime="20181210 17:51:53.133"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:51:53.133" endtime="20181210 17:51:53.180"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<msg timestamp="20181210 17:51:53.180" level="INFO">Clicking element '//button[@id='save']'.</msg>
<status status="PASS" starttime="20181210 17:51:53.180" endtime="20181210 17:51:53.312"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20181210 17:51:56.323" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20181210 17:51:53.312" endtime="20181210 17:51:56.323"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:45.386" endtime="20181210 17:51:56.323"></status>
</kw>
<kw name="${row} = 4" type="foritem">
<kw name="Reading data from spreadsheet">
<arguments>
<arg>${row}</arg>
</arguments>
<kw name="Open Excel" library="ExcelRobot">
<doc>Opens the Excel file to read from the path provided in the file path parameter.</doc>
<arguments>
<arg>${excelName}</arg>
</arguments>
<msg timestamp="20181210 17:51:56.323" level="INFO">Opening file at C:\Users\BLR153\Desktop\DSA Automation\DSA-USA-RFW\ScoreCardCnfigurations.xlsx</msg>
<status status="PASS" starttime="20181210 17:51:56.323" endtime="20181210 17:51:56.338"></status>
</kw>
<kw name="Get Sheet Names" library="ExcelRobot">
<doc>Returns the names of all the worksheets in the current workbook.</doc>
<assign>
<var>${NumberOfExcelSheets}</var>
</assign>
<msg timestamp="20181210 17:51:56.338" level="INFO">${NumberOfExcelSheets} = ['Sheet1', 'ScoreCardRangesToBeAdded']</msg>
<status status="PASS" starttime="20181210 17:51:56.338" endtime="20181210 17:51:56.338"></status>
</kw>
<kw name="Get Column Count" library="ExcelRobot">
<doc>Returns the specific number of columns of the sheet name specified.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
</arguments>
<assign>
<var>${nColCount}</var>
</assign>
<msg timestamp="20181210 17:51:56.338" level="INFO">${nColCount} = 7</msg>
<status status="PASS" starttime="20181210 17:51:56.338" endtime="20181210 17:51:56.338"></status>
</kw>
<kw name="${col} IN RANGE [ 0 | 1 ]" type="for">
<kw name="${col} = 0" type="foritem">
<kw name="Read Cell Data" library="ExcelRobot">
<doc>Uses the column and row to return the data from that cell.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
<arg>${col}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${CelData}</var>
</assign>
<msg timestamp="20181210 17:51:56.338" level="INFO">${CelData} = 30.00</msg>
<status status="PASS" starttime="20181210 17:51:56.338" endtime="20181210 17:51:56.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${MinScoreInput}</arg>
<arg>${CelData}</arg>
</arguments>
<msg timestamp="20181210 17:51:56.338" level="INFO">${MinScoreInput} = 30.00</msg>
<status status="PASS" starttime="20181210 17:51:56.338" endtime="20181210 17:51:56.338"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${col}+1</arg>
</arguments>
<assign>
<var>${col1}</var>
</assign>
<msg timestamp="20181210 17:51:56.338" level="INFO">${col1} = 1</msg>
<status status="PASS" starttime="20181210 17:51:56.338" endtime="20181210 17:51:56.338"></status>
</kw>
<kw name="Read Cell Data" library="ExcelRobot">
<doc>Uses the column and row to return the data from that cell.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
<arg>${col1}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${CelData2}</var>
</assign>
<msg timestamp="20181210 17:51:56.338" level="INFO">${CelData2} = 103.00</msg>
<status status="PASS" starttime="20181210 17:51:56.338" endtime="20181210 17:51:56.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${IncentiveAmount}</arg>
<arg>${CelData2}</arg>
</arguments>
<msg timestamp="20181210 17:51:56.354" level="INFO">${IncentiveAmount} = 103.00</msg>
<status status="PASS" starttime="20181210 17:51:56.338" endtime="20181210 17:51:56.354"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:56.338" endtime="20181210 17:51:56.354"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:56.338" endtime="20181210 17:51:56.354"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:56.323" endtime="20181210 17:51:56.354"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 s</arg>
</arguments>
<msg timestamp="20181210 17:51:58.366" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:56.354" endtime="20181210 17:51:58.366"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[@id='add']</arg>
</arguments>
<msg timestamp="20181210 17:51:58.366" level="INFO">Clicking button '//button[@id='add']'.</msg>
<status status="PASS" starttime="20181210 17:51:58.366" endtime="20181210 17:51:58.508"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:52:00.525" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:51:58.509" endtime="20181210 17:52:00.525"></status>
</kw>
<kw name="Page Should Contain Textfield" library="SeleniumLibrary">
<doc>Verifies text field ``locator`` is found from current page.</doc>
<arguments>
<arg>//input[@data-ng-model='range.minimumScoreNbrInput']</arg>
</arguments>
<msg timestamp="20181210 17:52:00.566" level="INFO">Current page contains text field '//input[@data-ng-model='range.minimumScoreNbrInput']'.</msg>
<status status="PASS" starttime="20181210 17:52:00.525" endtime="20181210 17:52:00.566"></status>
</kw>
<kw name="Element Should Be Disabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is disabled.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:52:00.566" endtime="20181210 17:52:00.582"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@id='cancel']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:52:00.582" endtime="20181210 17:52:00.629"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@data-ng-model='range.minimumScoreNbrInput']</arg>
<arg>${MinScoreInput}</arg>
</arguments>
<msg timestamp="20181210 17:52:00.629" level="INFO">Typing text '30.00' into text field '//input[@data-ng-model='range.minimumScoreNbrInput']'.</msg>
<status status="PASS" starttime="20181210 17:52:00.629" endtime="20181210 17:52:00.845"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20181210 17:52:01.848" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20181210 17:52:00.845" endtime="20181210 17:52:01.848"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@name='amountInput']</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<msg timestamp="20181210 17:52:01.850" level="INFO">Typing text '103.00' into text field '//input[@name='amountInput']'.</msg>
<status status="PASS" starttime="20181210 17:52:01.849" endtime="20181210 17:52:02.130"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:52:04.142" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:52:02.130" endtime="20181210 17:52:04.142"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:52:04.142" endtime="20181210 17:52:04.204"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<msg timestamp="20181210 17:52:04.204" level="INFO">Clicking element '//button[@id='save']'.</msg>
<status status="PASS" starttime="20181210 17:52:04.204" endtime="20181210 17:52:04.337"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20181210 17:52:07.352" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20181210 17:52:04.338" endtime="20181210 17:52:07.352"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:56.323" endtime="20181210 17:52:07.352"></status>
</kw>
<kw name="${row} = 5" type="foritem">
<kw name="Reading data from spreadsheet">
<arguments>
<arg>${row}</arg>
</arguments>
<kw name="Open Excel" library="ExcelRobot">
<doc>Opens the Excel file to read from the path provided in the file path parameter.</doc>
<arguments>
<arg>${excelName}</arg>
</arguments>
<msg timestamp="20181210 17:52:07.352" level="INFO">Opening file at C:\Users\BLR153\Desktop\DSA Automation\DSA-USA-RFW\ScoreCardCnfigurations.xlsx</msg>
<status status="PASS" starttime="20181210 17:52:07.352" endtime="20181210 17:52:07.352"></status>
</kw>
<kw name="Get Sheet Names" library="ExcelRobot">
<doc>Returns the names of all the worksheets in the current workbook.</doc>
<assign>
<var>${NumberOfExcelSheets}</var>
</assign>
<msg timestamp="20181210 17:52:07.352" level="INFO">${NumberOfExcelSheets} = ['Sheet1', 'ScoreCardRangesToBeAdded']</msg>
<status status="PASS" starttime="20181210 17:52:07.352" endtime="20181210 17:52:07.352"></status>
</kw>
<kw name="Get Column Count" library="ExcelRobot">
<doc>Returns the specific number of columns of the sheet name specified.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
</arguments>
<assign>
<var>${nColCount}</var>
</assign>
<msg timestamp="20181210 17:52:07.352" level="INFO">${nColCount} = 7</msg>
<status status="PASS" starttime="20181210 17:52:07.352" endtime="20181210 17:52:07.352"></status>
</kw>
<kw name="${col} IN RANGE [ 0 | 1 ]" type="for">
<kw name="${col} = 0" type="foritem">
<kw name="Read Cell Data" library="ExcelRobot">
<doc>Uses the column and row to return the data from that cell.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
<arg>${col}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${CelData}</var>
</assign>
<msg timestamp="20181210 17:52:07.368" level="INFO">${CelData} = 40.00</msg>
<status status="PASS" starttime="20181210 17:52:07.368" endtime="20181210 17:52:07.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${MinScoreInput}</arg>
<arg>${CelData}</arg>
</arguments>
<msg timestamp="20181210 17:52:07.368" level="INFO">${MinScoreInput} = 40.00</msg>
<status status="PASS" starttime="20181210 17:52:07.368" endtime="20181210 17:52:07.368"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${col}+1</arg>
</arguments>
<assign>
<var>${col1}</var>
</assign>
<msg timestamp="20181210 17:52:07.368" level="INFO">${col1} = 1</msg>
<status status="PASS" starttime="20181210 17:52:07.368" endtime="20181210 17:52:07.368"></status>
</kw>
<kw name="Read Cell Data" library="ExcelRobot">
<doc>Uses the column and row to return the data from that cell.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
<arg>${col1}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${CelData2}</var>
</assign>
<msg timestamp="20181210 17:52:07.368" level="INFO">${CelData2} = 104.00</msg>
<status status="PASS" starttime="20181210 17:52:07.368" endtime="20181210 17:52:07.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${IncentiveAmount}</arg>
<arg>${CelData2}</arg>
</arguments>
<msg timestamp="20181210 17:52:07.368" level="INFO">${IncentiveAmount} = 104.00</msg>
<status status="PASS" starttime="20181210 17:52:07.368" endtime="20181210 17:52:07.368"></status>
</kw>
<status status="PASS" starttime="20181210 17:52:07.368" endtime="20181210 17:52:07.368"></status>
</kw>
<status status="PASS" starttime="20181210 17:52:07.352" endtime="20181210 17:52:07.368"></status>
</kw>
<status status="PASS" starttime="20181210 17:52:07.352" endtime="20181210 17:52:07.368"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 s</arg>
</arguments>
<msg timestamp="20181210 17:52:09.380" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:52:07.368" endtime="20181210 17:52:09.380"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[@id='add']</arg>
</arguments>
<msg timestamp="20181210 17:52:09.380" level="INFO">Clicking button '//button[@id='add']'.</msg>
<status status="PASS" starttime="20181210 17:52:09.380" endtime="20181210 17:52:09.517"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:52:11.529" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:52:09.517" endtime="20181210 17:52:11.529"></status>
</kw>
<kw name="Page Should Contain Textfield" library="SeleniumLibrary">
<doc>Verifies text field ``locator`` is found from current page.</doc>
<arguments>
<arg>//input[@data-ng-model='range.minimumScoreNbrInput']</arg>
</arguments>
<msg timestamp="20181210 17:52:11.576" level="INFO">Current page contains text field '//input[@data-ng-model='range.minimumScoreNbrInput']'.</msg>
<status status="PASS" starttime="20181210 17:52:11.529" endtime="20181210 17:52:11.576"></status>
</kw>
<kw name="Element Should Be Disabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is disabled.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:52:11.576" endtime="20181210 17:52:11.607"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@id='cancel']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:52:11.623" endtime="20181210 17:52:11.654"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@data-ng-model='range.minimumScoreNbrInput']</arg>
<arg>${MinScoreInput}</arg>
</arguments>
<msg timestamp="20181210 17:52:11.654" level="INFO">Typing text '40.00' into text field '//input[@data-ng-model='range.minimumScoreNbrInput']'.</msg>
<status status="PASS" starttime="20181210 17:52:11.654" endtime="20181210 17:52:11.865"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20181210 17:52:12.876" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20181210 17:52:11.865" endtime="20181210 17:52:12.876"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@name='amountInput']</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<msg timestamp="20181210 17:52:12.876" level="INFO">Typing text '104.00' into text field '//input[@name='amountInput']'.</msg>
<status status="PASS" starttime="20181210 17:52:12.876" endtime="20181210 17:52:13.199"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:52:15.214" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:52:13.199" endtime="20181210 17:52:15.214"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:52:15.214" endtime="20181210 17:52:15.261"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<msg timestamp="20181210 17:52:15.261" level="INFO">Clicking element '//button[@id='save']'.</msg>
<status status="PASS" starttime="20181210 17:52:15.261" endtime="20181210 17:52:15.393"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20181210 17:52:18.402" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20181210 17:52:15.394" endtime="20181210 17:52:18.402"></status>
</kw>
<status status="PASS" starttime="20181210 17:52:07.352" endtime="20181210 17:52:18.402"></status>
</kw>
<kw name="${row} = 6" type="foritem">
<kw name="Reading data from spreadsheet">
<arguments>
<arg>${row}</arg>
</arguments>
<kw name="Open Excel" library="ExcelRobot">
<doc>Opens the Excel file to read from the path provided in the file path parameter.</doc>
<arguments>
<arg>${excelName}</arg>
</arguments>
<msg timestamp="20181210 17:52:18.402" level="INFO">Opening file at C:\Users\BLR153\Desktop\DSA Automation\DSA-USA-RFW\ScoreCardCnfigurations.xlsx</msg>
<status status="PASS" starttime="20181210 17:52:18.402" endtime="20181210 17:52:18.402"></status>
</kw>
<kw name="Get Sheet Names" library="ExcelRobot">
<doc>Returns the names of all the worksheets in the current workbook.</doc>
<assign>
<var>${NumberOfExcelSheets}</var>
</assign>
<msg timestamp="20181210 17:52:18.402" level="INFO">${NumberOfExcelSheets} = ['Sheet1', 'ScoreCardRangesToBeAdded']</msg>
<status status="PASS" starttime="20181210 17:52:18.402" endtime="20181210 17:52:18.402"></status>
</kw>
<kw name="Get Column Count" library="ExcelRobot">
<doc>Returns the specific number of columns of the sheet name specified.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
</arguments>
<assign>
<var>${nColCount}</var>
</assign>
<msg timestamp="20181210 17:52:18.417" level="INFO">${nColCount} = 7</msg>
<status status="PASS" starttime="20181210 17:52:18.402" endtime="20181210 17:52:18.417"></status>
</kw>
<kw name="${col} IN RANGE [ 0 | 1 ]" type="for">
<kw name="${col} = 0" type="foritem">
<kw name="Read Cell Data" library="ExcelRobot">
<doc>Uses the column and row to return the data from that cell.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
<arg>${col}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${CelData}</var>
</assign>
<msg timestamp="20181210 17:52:18.417" level="INFO">${CelData} = 50.00</msg>
<status status="PASS" starttime="20181210 17:52:18.417" endtime="20181210 17:52:18.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${MinScoreInput}</arg>
<arg>${CelData}</arg>
</arguments>
<msg timestamp="20181210 17:52:18.417" level="INFO">${MinScoreInput} = 50.00</msg>
<status status="PASS" starttime="20181210 17:52:18.417" endtime="20181210 17:52:18.417"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${col}+1</arg>
</arguments>
<assign>
<var>${col1}</var>
</assign>
<msg timestamp="20181210 17:52:18.417" level="INFO">${col1} = 1</msg>
<status status="PASS" starttime="20181210 17:52:18.417" endtime="20181210 17:52:18.417"></status>
</kw>
<kw name="Read Cell Data" library="ExcelRobot">
<doc>Uses the column and row to return the data from that cell.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
<arg>${col1}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${CelData2}</var>
</assign>
<msg timestamp="20181210 17:52:18.417" level="INFO">${CelData2} = 105.00</msg>
<status status="PASS" starttime="20181210 17:52:18.417" endtime="20181210 17:52:18.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${IncentiveAmount}</arg>
<arg>${CelData2}</arg>
</arguments>
<msg timestamp="20181210 17:52:18.417" level="INFO">${IncentiveAmount} = 105.00</msg>
<status status="PASS" starttime="20181210 17:52:18.417" endtime="20181210 17:52:18.417"></status>
</kw>
<status status="PASS" starttime="20181210 17:52:18.417" endtime="20181210 17:52:18.417"></status>
</kw>
<status status="PASS" starttime="20181210 17:52:18.417" endtime="20181210 17:52:18.417"></status>
</kw>
<status status="PASS" starttime="20181210 17:52:18.402" endtime="20181210 17:52:18.417"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 s</arg>
</arguments>
<msg timestamp="20181210 17:52:20.425" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:52:18.417" endtime="20181210 17:52:20.425"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[@id='add']</arg>
</arguments>
<msg timestamp="20181210 17:52:20.425" level="INFO">Clicking button '//button[@id='add']'.</msg>
<status status="PASS" starttime="20181210 17:52:20.425" endtime="20181210 17:52:20.583"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:52:22.595" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:52:20.583" endtime="20181210 17:52:22.595"></status>
</kw>
<kw name="Page Should Contain Textfield" library="SeleniumLibrary">
<doc>Verifies text field ``locator`` is found from current page.</doc>
<arguments>
<arg>//input[@data-ng-model='range.minimumScoreNbrInput']</arg>
</arguments>
<msg timestamp="20181210 17:52:22.642" level="INFO">Current page contains text field '//input[@data-ng-model='range.minimumScoreNbrInput']'.</msg>
<status status="PASS" starttime="20181210 17:52:22.595" endtime="20181210 17:52:22.642"></status>
</kw>
<kw name="Element Should Be Disabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is disabled.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:52:22.642" endtime="20181210 17:52:22.673"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@id='cancel']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:52:22.673" endtime="20181210 17:52:22.704"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@data-ng-model='range.minimumScoreNbrInput']</arg>
<arg>${MinScoreInput}</arg>
</arguments>
<msg timestamp="20181210 17:52:22.704" level="INFO">Typing text '50.00' into text field '//input[@data-ng-model='range.minimumScoreNbrInput']'.</msg>
<status status="PASS" starttime="20181210 17:52:22.704" endtime="20181210 17:52:22.935"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20181210 17:52:23.940" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20181210 17:52:22.936" endtime="20181210 17:52:23.940"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@name='amountInput']</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<msg timestamp="20181210 17:52:23.940" level="INFO">Typing text '105.00' into text field '//input[@name='amountInput']'.</msg>
<status status="PASS" starttime="20181210 17:52:23.940" endtime="20181210 17:52:24.264"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:52:26.277" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:52:24.264" endtime="20181210 17:52:26.277"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:52:26.277" endtime="20181210 17:52:26.321"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<msg timestamp="20181210 17:52:26.321" level="INFO">Clicking element '//button[@id='save']'.</msg>
<status status="PASS" starttime="20181210 17:52:26.321" endtime="20181210 17:52:26.457"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20181210 17:52:29.471" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20181210 17:52:26.458" endtime="20181210 17:52:29.471"></status>
</kw>
<status status="PASS" starttime="20181210 17:52:18.402" endtime="20181210 17:52:29.471"></status>
</kw>
<kw name="${row} = 7" type="foritem">
<kw name="Reading data from spreadsheet">
<arguments>
<arg>${row}</arg>
</arguments>
<kw name="Open Excel" library="ExcelRobot">
<doc>Opens the Excel file to read from the path provided in the file path parameter.</doc>
<arguments>
<arg>${excelName}</arg>
</arguments>
<msg timestamp="20181210 17:52:29.471" level="INFO">Opening file at C:\Users\BLR153\Desktop\DSA Automation\DSA-USA-RFW\ScoreCardCnfigurations.xlsx</msg>
<status status="PASS" starttime="20181210 17:52:29.471" endtime="20181210 17:52:29.471"></status>
</kw>
<kw name="Get Sheet Names" library="ExcelRobot">
<doc>Returns the names of all the worksheets in the current workbook.</doc>
<assign>
<var>${NumberOfExcelSheets}</var>
</assign>
<msg timestamp="20181210 17:52:29.471" level="INFO">${NumberOfExcelSheets} = ['Sheet1', 'ScoreCardRangesToBeAdded']</msg>
<status status="PASS" starttime="20181210 17:52:29.471" endtime="20181210 17:52:29.471"></status>
</kw>
<kw name="Get Column Count" library="ExcelRobot">
<doc>Returns the specific number of columns of the sheet name specified.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
</arguments>
<assign>
<var>${nColCount}</var>
</assign>
<msg timestamp="20181210 17:52:29.471" level="INFO">${nColCount} = 7</msg>
<status status="PASS" starttime="20181210 17:52:29.471" endtime="20181210 17:52:29.471"></status>
</kw>
<kw name="${col} IN RANGE [ 0 | 1 ]" type="for">
<kw name="${col} = 0" type="foritem">
<kw name="Read Cell Data" library="ExcelRobot">
<doc>Uses the column and row to return the data from that cell.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
<arg>${col}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${CelData}</var>
</assign>
<msg timestamp="20181210 17:52:29.486" level="INFO">${CelData} = 60.00</msg>
<status status="PASS" starttime="20181210 17:52:29.486" endtime="20181210 17:52:29.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${MinScoreInput}</arg>
<arg>${CelData}</arg>
</arguments>
<msg timestamp="20181210 17:52:29.486" level="INFO">${MinScoreInput} = 60.00</msg>
<status status="PASS" starttime="20181210 17:52:29.486" endtime="20181210 17:52:29.486"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${col}+1</arg>
</arguments>
<assign>
<var>${col1}</var>
</assign>
<msg timestamp="20181210 17:52:29.486" level="INFO">${col1} = 1</msg>
<status status="PASS" starttime="20181210 17:52:29.486" endtime="20181210 17:52:29.486"></status>
</kw>
<kw name="Read Cell Data" library="ExcelRobot">
<doc>Uses the column and row to return the data from that cell.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
<arg>${col1}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${CelData2}</var>
</assign>
<msg timestamp="20181210 17:52:29.486" level="INFO">${CelData2} = 106.00</msg>
<status status="PASS" starttime="20181210 17:52:29.486" endtime="20181210 17:52:29.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${IncentiveAmount}</arg>
<arg>${CelData2}</arg>
</arguments>
<msg timestamp="20181210 17:52:29.486" level="INFO">${IncentiveAmount} = 106.00</msg>
<status status="PASS" starttime="20181210 17:52:29.486" endtime="20181210 17:52:29.486"></status>
</kw>
<status status="PASS" starttime="20181210 17:52:29.486" endtime="20181210 17:52:29.486"></status>
</kw>
<status status="PASS" starttime="20181210 17:52:29.486" endtime="20181210 17:52:29.486"></status>
</kw>
<status status="PASS" starttime="20181210 17:52:29.471" endtime="20181210 17:52:29.486"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 s</arg>
</arguments>
<msg timestamp="20181210 17:52:31.499" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:52:29.486" endtime="20181210 17:52:31.499"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[@id='add']</arg>
</arguments>
<msg timestamp="20181210 17:52:31.499" level="INFO">Clicking button '//button[@id='add']'.</msg>
<status status="PASS" starttime="20181210 17:52:31.499" endtime="20181210 17:52:31.630"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:52:33.630" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:52:31.630" endtime="20181210 17:52:33.630"></status>
</kw>
<kw name="Page Should Contain Textfield" library="SeleniumLibrary">
<doc>Verifies text field ``locator`` is found from current page.</doc>
<arguments>
<arg>//input[@data-ng-model='range.minimumScoreNbrInput']</arg>
</arguments>
<msg timestamp="20181210 17:52:33.682" level="INFO">Current page contains text field '//input[@data-ng-model='range.minimumScoreNbrInput']'.</msg>
<status status="PASS" starttime="20181210 17:52:33.631" endtime="20181210 17:52:33.682"></status>
</kw>
<kw name="Element Should Be Disabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is disabled.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:52:33.682" endtime="20181210 17:52:33.729"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@id='cancel']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:52:33.729" endtime="20181210 17:52:33.775"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@data-ng-model='range.minimumScoreNbrInput']</arg>
<arg>${MinScoreInput}</arg>
</arguments>
<msg timestamp="20181210 17:52:33.775" level="INFO">Typing text '60.00' into text field '//input[@data-ng-model='range.minimumScoreNbrInput']'.</msg>
<status status="PASS" starttime="20181210 17:52:33.775" endtime="20181210 17:52:33.991"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20181210 17:52:34.993" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20181210 17:52:33.992" endtime="20181210 17:52:34.993"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@name='amountInput']</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<msg timestamp="20181210 17:52:34.994" level="INFO">Typing text '106.00' into text field '//input[@name='amountInput']'.</msg>
<status status="PASS" starttime="20181210 17:52:34.994" endtime="20181210 17:52:35.281"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:52:37.284" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:52:35.282" endtime="20181210 17:52:37.284"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:52:37.284" endtime="20181210 17:52:37.331"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<msg timestamp="20181210 17:52:37.331" level="INFO">Clicking element '//button[@id='save']'.</msg>
<status status="PASS" starttime="20181210 17:52:37.331" endtime="20181210 17:52:37.449"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20181210 17:52:40.457" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20181210 17:52:37.449" endtime="20181210 17:52:40.457"></status>
</kw>
<status status="PASS" starttime="20181210 17:52:29.471" endtime="20181210 17:52:40.457"></status>
</kw>
<kw name="${row} = 8" type="foritem">
<kw name="Reading data from spreadsheet">
<arguments>
<arg>${row}</arg>
</arguments>
<kw name="Open Excel" library="ExcelRobot">
<doc>Opens the Excel file to read from the path provided in the file path parameter.</doc>
<arguments>
<arg>${excelName}</arg>
</arguments>
<msg timestamp="20181210 17:52:40.457" level="INFO">Opening file at C:\Users\BLR153\Desktop\DSA Automation\DSA-USA-RFW\ScoreCardCnfigurations.xlsx</msg>
<status status="PASS" starttime="20181210 17:52:40.457" endtime="20181210 17:52:40.457"></status>
</kw>
<kw name="Get Sheet Names" library="ExcelRobot">
<doc>Returns the names of all the worksheets in the current workbook.</doc>
<assign>
<var>${NumberOfExcelSheets}</var>
</assign>
<msg timestamp="20181210 17:52:40.457" level="INFO">${NumberOfExcelSheets} = ['Sheet1', 'ScoreCardRangesToBeAdded']</msg>
<status status="PASS" starttime="20181210 17:52:40.457" endtime="20181210 17:52:40.457"></status>
</kw>
<kw name="Get Column Count" library="ExcelRobot">
<doc>Returns the specific number of columns of the sheet name specified.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
</arguments>
<assign>
<var>${nColCount}</var>
</assign>
<msg timestamp="20181210 17:52:40.472" level="INFO">${nColCount} = 7</msg>
<status status="PASS" starttime="20181210 17:52:40.472" endtime="20181210 17:52:40.472"></status>
</kw>
<kw name="${col} IN RANGE [ 0 | 1 ]" type="for">
<kw name="${col} = 0" type="foritem">
<kw name="Read Cell Data" library="ExcelRobot">
<doc>Uses the column and row to return the data from that cell.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
<arg>${col}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${CelData}</var>
</assign>
<msg timestamp="20181210 17:52:40.472" level="INFO">${CelData} = 70.00</msg>
<status status="PASS" starttime="20181210 17:52:40.472" endtime="20181210 17:52:40.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${MinScoreInput}</arg>
<arg>${CelData}</arg>
</arguments>
<msg timestamp="20181210 17:52:40.472" level="INFO">${MinScoreInput} = 70.00</msg>
<status status="PASS" starttime="20181210 17:52:40.472" endtime="20181210 17:52:40.472"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${col}+1</arg>
</arguments>
<assign>
<var>${col1}</var>
</assign>
<msg timestamp="20181210 17:52:40.472" level="INFO">${col1} = 1</msg>
<status status="PASS" starttime="20181210 17:52:40.472" endtime="20181210 17:52:40.472"></status>
</kw>
<kw name="Read Cell Data" library="ExcelRobot">
<doc>Uses the column and row to return the data from that cell.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
<arg>${col1}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${CelData2}</var>
</assign>
<msg timestamp="20181210 17:52:40.472" level="INFO">${CelData2} = 107.00</msg>
<status status="PASS" starttime="20181210 17:52:40.472" endtime="20181210 17:52:40.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${IncentiveAmount}</arg>
<arg>${CelData2}</arg>
</arguments>
<msg timestamp="20181210 17:52:40.472" level="INFO">${IncentiveAmount} = 107.00</msg>
<status status="PASS" starttime="20181210 17:52:40.472" endtime="20181210 17:52:40.472"></status>
</kw>
<status status="PASS" starttime="20181210 17:52:40.472" endtime="20181210 17:52:40.472"></status>
</kw>
<status status="PASS" starttime="20181210 17:52:40.472" endtime="20181210 17:52:40.472"></status>
</kw>
<status status="PASS" starttime="20181210 17:52:40.457" endtime="20181210 17:52:40.472"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 s</arg>
</arguments>
<msg timestamp="20181210 17:52:42.473" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:52:40.472" endtime="20181210 17:52:42.473"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[@id='add']</arg>
</arguments>
<msg timestamp="20181210 17:52:42.473" level="INFO">Clicking button '//button[@id='add']'.</msg>
<status status="PASS" starttime="20181210 17:52:42.473" endtime="20181210 17:52:42.587"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:52:44.591" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:52:42.587" endtime="20181210 17:52:44.591"></status>
</kw>
<kw name="Page Should Contain Textfield" library="SeleniumLibrary">
<doc>Verifies text field ``locator`` is found from current page.</doc>
<arguments>
<arg>//input[@data-ng-model='range.minimumScoreNbrInput']</arg>
</arguments>
<msg timestamp="20181210 17:52:44.637" level="INFO">Current page contains text field '//input[@data-ng-model='range.minimumScoreNbrInput']'.</msg>
<status status="PASS" starttime="20181210 17:52:44.591" endtime="20181210 17:52:44.637"></status>
</kw>
<kw name="Element Should Be Disabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is disabled.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:52:44.637" endtime="20181210 17:52:44.684"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@id='cancel']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:52:44.684" endtime="20181210 17:52:44.700"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@data-ng-model='range.minimumScoreNbrInput']</arg>
<arg>${MinScoreInput}</arg>
</arguments>
<msg timestamp="20181210 17:52:44.700" level="INFO">Typing text '70.00' into text field '//input[@data-ng-model='range.minimumScoreNbrInput']'.</msg>
<status status="PASS" starttime="20181210 17:52:44.700" endtime="20181210 17:52:44.908"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20181210 17:52:45.909" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20181210 17:52:44.909" endtime="20181210 17:52:45.909"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@name='amountInput']</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<msg timestamp="20181210 17:52:45.912" level="INFO">Typing text '107.00' into text field '//input[@name='amountInput']'.</msg>
<status status="PASS" starttime="20181210 17:52:45.911" endtime="20181210 17:52:46.217"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:52:48.229" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:52:46.218" endtime="20181210 17:52:48.229"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:52:48.229" endtime="20181210 17:52:48.292"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<msg timestamp="20181210 17:52:48.292" level="INFO">Clicking element '//button[@id='save']'.</msg>
<status status="PASS" starttime="20181210 17:52:48.292" endtime="20181210 17:52:48.442"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20181210 17:52:51.443" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20181210 17:52:48.442" endtime="20181210 17:52:51.443"></status>
</kw>
<status status="PASS" starttime="20181210 17:52:40.457" endtime="20181210 17:52:51.443"></status>
</kw>
<kw name="${row} = 9" type="foritem">
<kw name="Reading data from spreadsheet">
<arguments>
<arg>${row}</arg>
</arguments>
<kw name="Open Excel" library="ExcelRobot">
<doc>Opens the Excel file to read from the path provided in the file path parameter.</doc>
<arguments>
<arg>${excelName}</arg>
</arguments>
<msg timestamp="20181210 17:52:51.443" level="INFO">Opening file at C:\Users\BLR153\Desktop\DSA Automation\DSA-USA-RFW\ScoreCardCnfigurations.xlsx</msg>
<status status="PASS" starttime="20181210 17:52:51.443" endtime="20181210 17:52:51.443"></status>
</kw>
<kw name="Get Sheet Names" library="ExcelRobot">
<doc>Returns the names of all the worksheets in the current workbook.</doc>
<assign>
<var>${NumberOfExcelSheets}</var>
</assign>
<msg timestamp="20181210 17:52:51.443" level="INFO">${NumberOfExcelSheets} = ['Sheet1', 'ScoreCardRangesToBeAdded']</msg>
<status status="PASS" starttime="20181210 17:52:51.443" endtime="20181210 17:52:51.443"></status>
</kw>
<kw name="Get Column Count" library="ExcelRobot">
<doc>Returns the specific number of columns of the sheet name specified.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
</arguments>
<assign>
<var>${nColCount}</var>
</assign>
<msg timestamp="20181210 17:52:51.443" level="INFO">${nColCount} = 7</msg>
<status status="PASS" starttime="20181210 17:52:51.443" endtime="20181210 17:52:51.443"></status>
</kw>
<kw name="${col} IN RANGE [ 0 | 1 ]" type="for">
<kw name="${col} = 0" type="foritem">
<kw name="Read Cell Data" library="ExcelRobot">
<doc>Uses the column and row to return the data from that cell.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
<arg>${col}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${CelData}</var>
</assign>
<msg timestamp="20181210 17:52:51.458" level="INFO">${CelData} = 80.00</msg>
<status status="PASS" starttime="20181210 17:52:51.458" endtime="20181210 17:52:51.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${MinScoreInput}</arg>
<arg>${CelData}</arg>
</arguments>
<msg timestamp="20181210 17:52:51.458" level="INFO">${MinScoreInput} = 80.00</msg>
<status status="PASS" starttime="20181210 17:52:51.458" endtime="20181210 17:52:51.458"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${col}+1</arg>
</arguments>
<assign>
<var>${col1}</var>
</assign>
<msg timestamp="20181210 17:52:51.458" level="INFO">${col1} = 1</msg>
<status status="PASS" starttime="20181210 17:52:51.458" endtime="20181210 17:52:51.458"></status>
</kw>
<kw name="Read Cell Data" library="ExcelRobot">
<doc>Uses the column and row to return the data from that cell.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
<arg>${col1}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${CelData2}</var>
</assign>
<msg timestamp="20181210 17:52:51.458" level="INFO">${CelData2} = 108.00</msg>
<status status="PASS" starttime="20181210 17:52:51.458" endtime="20181210 17:52:51.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${IncentiveAmount}</arg>
<arg>${CelData2}</arg>
</arguments>
<msg timestamp="20181210 17:52:51.458" level="INFO">${IncentiveAmount} = 108.00</msg>
<status status="PASS" starttime="20181210 17:52:51.458" endtime="20181210 17:52:51.458"></status>
</kw>
<status status="PASS" starttime="20181210 17:52:51.458" endtime="20181210 17:52:51.458"></status>
</kw>
<status status="PASS" starttime="20181210 17:52:51.458" endtime="20181210 17:52:51.458"></status>
</kw>
<status status="PASS" starttime="20181210 17:52:51.443" endtime="20181210 17:52:51.458"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 s</arg>
</arguments>
<msg timestamp="20181210 17:52:53.470" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:52:51.458" endtime="20181210 17:52:53.470"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[@id='add']</arg>
</arguments>
<msg timestamp="20181210 17:52:53.470" level="INFO">Clicking button '//button[@id='add']'.</msg>
<status status="PASS" starttime="20181210 17:52:53.470" endtime="20181210 17:52:53.605"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:52:55.617" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:52:53.606" endtime="20181210 17:52:55.617"></status>
</kw>
<kw name="Page Should Contain Textfield" library="SeleniumLibrary">
<doc>Verifies text field ``locator`` is found from current page.</doc>
<arguments>
<arg>//input[@data-ng-model='range.minimumScoreNbrInput']</arg>
</arguments>
<msg timestamp="20181210 17:52:55.663" level="INFO">Current page contains text field '//input[@data-ng-model='range.minimumScoreNbrInput']'.</msg>
<status status="PASS" starttime="20181210 17:52:55.617" endtime="20181210 17:52:55.663"></status>
</kw>
<kw name="Element Should Be Disabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is disabled.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:52:55.663" endtime="20181210 17:52:55.679"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@id='cancel']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:52:55.679" endtime="20181210 17:52:55.710"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@data-ng-model='range.minimumScoreNbrInput']</arg>
<arg>${MinScoreInput}</arg>
</arguments>
<msg timestamp="20181210 17:52:55.710" level="INFO">Typing text '80.00' into text field '//input[@data-ng-model='range.minimumScoreNbrInput']'.</msg>
<status status="PASS" starttime="20181210 17:52:55.710" endtime="20181210 17:52:55.934"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20181210 17:52:56.950" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20181210 17:52:55.934" endtime="20181210 17:52:56.950"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@name='amountInput']</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<msg timestamp="20181210 17:52:56.950" level="INFO">Typing text '108.00' into text field '//input[@name='amountInput']'.</msg>
<status status="PASS" starttime="20181210 17:52:56.950" endtime="20181210 17:52:57.231"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:52:59.244" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:52:57.231" endtime="20181210 17:52:59.244"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:52:59.244" endtime="20181210 17:52:59.307"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<msg timestamp="20181210 17:52:59.307" level="INFO">Clicking element '//button[@id='save']'.</msg>
<status status="PASS" starttime="20181210 17:52:59.307" endtime="20181210 17:52:59.473"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20181210 17:53:02.481" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20181210 17:52:59.474" endtime="20181210 17:53:02.481"></status>
</kw>
<status status="PASS" starttime="20181210 17:52:51.443" endtime="20181210 17:53:02.481"></status>
</kw>
<kw name="${row} = 10" type="foritem">
<kw name="Reading data from spreadsheet">
<arguments>
<arg>${row}</arg>
</arguments>
<kw name="Open Excel" library="ExcelRobot">
<doc>Opens the Excel file to read from the path provided in the file path parameter.</doc>
<arguments>
<arg>${excelName}</arg>
</arguments>
<msg timestamp="20181210 17:53:02.481" level="INFO">Opening file at C:\Users\BLR153\Desktop\DSA Automation\DSA-USA-RFW\ScoreCardCnfigurations.xlsx</msg>
<status status="PASS" starttime="20181210 17:53:02.481" endtime="20181210 17:53:02.481"></status>
</kw>
<kw name="Get Sheet Names" library="ExcelRobot">
<doc>Returns the names of all the worksheets in the current workbook.</doc>
<assign>
<var>${NumberOfExcelSheets}</var>
</assign>
<msg timestamp="20181210 17:53:02.481" level="INFO">${NumberOfExcelSheets} = ['Sheet1', 'ScoreCardRangesToBeAdded']</msg>
<status status="PASS" starttime="20181210 17:53:02.481" endtime="20181210 17:53:02.481"></status>
</kw>
<kw name="Get Column Count" library="ExcelRobot">
<doc>Returns the specific number of columns of the sheet name specified.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
</arguments>
<assign>
<var>${nColCount}</var>
</assign>
<msg timestamp="20181210 17:53:02.481" level="INFO">${nColCount} = 7</msg>
<status status="PASS" starttime="20181210 17:53:02.481" endtime="20181210 17:53:02.481"></status>
</kw>
<kw name="${col} IN RANGE [ 0 | 1 ]" type="for">
<kw name="${col} = 0" type="foritem">
<kw name="Read Cell Data" library="ExcelRobot">
<doc>Uses the column and row to return the data from that cell.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
<arg>${col}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${CelData}</var>
</assign>
<msg timestamp="20181210 17:53:02.497" level="INFO">${CelData} = 90.00</msg>
<status status="PASS" starttime="20181210 17:53:02.497" endtime="20181210 17:53:02.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${MinScoreInput}</arg>
<arg>${CelData}</arg>
</arguments>
<msg timestamp="20181210 17:53:02.497" level="INFO">${MinScoreInput} = 90.00</msg>
<status status="PASS" starttime="20181210 17:53:02.497" endtime="20181210 17:53:02.497"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${col}+1</arg>
</arguments>
<assign>
<var>${col1}</var>
</assign>
<msg timestamp="20181210 17:53:02.497" level="INFO">${col1} = 1</msg>
<status status="PASS" starttime="20181210 17:53:02.497" endtime="20181210 17:53:02.497"></status>
</kw>
<kw name="Read Cell Data" library="ExcelRobot">
<doc>Uses the column and row to return the data from that cell.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
<arg>${col1}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${CelData2}</var>
</assign>
<msg timestamp="20181210 17:53:02.497" level="INFO">${CelData2} = 109.00</msg>
<status status="PASS" starttime="20181210 17:53:02.497" endtime="20181210 17:53:02.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${IncentiveAmount}</arg>
<arg>${CelData2}</arg>
</arguments>
<msg timestamp="20181210 17:53:02.497" level="INFO">${IncentiveAmount} = 109.00</msg>
<status status="PASS" starttime="20181210 17:53:02.497" endtime="20181210 17:53:02.497"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:02.497" endtime="20181210 17:53:02.497"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:02.497" endtime="20181210 17:53:02.497"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:02.481" endtime="20181210 17:53:02.497"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 s</arg>
</arguments>
<msg timestamp="20181210 17:53:04.504" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:53:02.497" endtime="20181210 17:53:04.504"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[@id='add']</arg>
</arguments>
<msg timestamp="20181210 17:53:04.504" level="INFO">Clicking button '//button[@id='add']'.</msg>
<status status="PASS" starttime="20181210 17:53:04.504" endtime="20181210 17:53:04.635"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:53:06.645" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:53:04.635" endtime="20181210 17:53:06.645"></status>
</kw>
<kw name="Page Should Contain Textfield" library="SeleniumLibrary">
<doc>Verifies text field ``locator`` is found from current page.</doc>
<arguments>
<arg>//input[@data-ng-model='range.minimumScoreNbrInput']</arg>
</arguments>
<msg timestamp="20181210 17:53:06.707" level="INFO">Current page contains text field '//input[@data-ng-model='range.minimumScoreNbrInput']'.</msg>
<status status="PASS" starttime="20181210 17:53:06.645" endtime="20181210 17:53:06.707"></status>
</kw>
<kw name="Element Should Be Disabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is disabled.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:06.707" endtime="20181210 17:53:06.738"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@id='cancel']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:06.738" endtime="20181210 17:53:06.770"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@data-ng-model='range.minimumScoreNbrInput']</arg>
<arg>${MinScoreInput}</arg>
</arguments>
<msg timestamp="20181210 17:53:06.770" level="INFO">Typing text '90.00' into text field '//input[@data-ng-model='range.minimumScoreNbrInput']'.</msg>
<status status="PASS" starttime="20181210 17:53:06.770" endtime="20181210 17:53:06.980"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20181210 17:53:07.980" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20181210 17:53:06.980" endtime="20181210 17:53:07.980"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@name='amountInput']</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<msg timestamp="20181210 17:53:07.982" level="INFO">Typing text '109.00' into text field '//input[@name='amountInput']'.</msg>
<status status="PASS" starttime="20181210 17:53:07.981" endtime="20181210 17:53:08.355"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:53:10.365" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:53:08.355" endtime="20181210 17:53:10.365"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:10.365" endtime="20181210 17:53:10.428"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>//button[@id='save']</arg>
</arguments>
<msg timestamp="20181210 17:53:10.428" level="INFO">Clicking element '//button[@id='save']'.</msg>
<status status="PASS" starttime="20181210 17:53:10.428" endtime="20181210 17:53:10.559"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20181210 17:53:13.567" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20181210 17:53:10.559" endtime="20181210 17:53:13.567"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:02.481" endtime="20181210 17:53:13.567"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:23.358" endtime="20181210 17:53:13.567"></status>
</kw>
<status status="PASS" starttime="20181210 17:51:23.342" endtime="20181210 17:53:13.567"></status>
</kw>
<kw name="Writing Added configurations to spreadsheets">
<kw name="Open Excel To Write" library="ExcelRobot">
<doc>Opens the Excel file to write from the path provided in the file name parameter.
In case `New Path` is given, new file will be created based on content of current file.</doc>
<arguments>
<arg>C:\\Users\\BLR153\\Desktop\\DSA Automation\\DSA-USA-RFW\\ScoreCardCnfigurations.xlsx</arg>
</arguments>
<msg timestamp="20181210 17:53:13.567" level="INFO">Opening file at C:\Users\BLR153\Desktop\DSA Automation\DSA-USA-RFW\ScoreCardCnfigurations.xlsx</msg>
<status status="PASS" starttime="20181210 17:53:13.567" endtime="20181210 17:53:13.583"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Handling columns to write data to sheet</arg>
</arguments>
<kw name="Handling columns to write data to sheet">
<kw name="Open Excel" library="ExcelRobot">
<doc>Opens the Excel file to read from the path provided in the file path parameter.</doc>
<arguments>
<arg>C:\\Users\\BLR153\\Desktop\\DSA Automation\\DSA-USA-RFW\\ScoreCardCnfigurations.xlsx</arg>
</arguments>
<msg timestamp="20181210 17:53:13.583" level="INFO">Opening file at C:\Users\BLR153\Desktop\DSA Automation\DSA-USA-RFW\ScoreCardCnfigurations.xlsx</msg>
<status status="PASS" starttime="20181210 17:53:13.583" endtime="20181210 17:53:13.583"></status>
</kw>
<kw name="Get Sheet Names" library="ExcelRobot">
<doc>Returns the names of all the worksheets in the current workbook.</doc>
<assign>
<var>${NumberOfExcelSheets}</var>
</assign>
<msg timestamp="20181210 17:53:13.583" level="INFO">${NumberOfExcelSheets} = ['Sheet1', 'ScoreCardRangesToBeAdded']</msg>
<status status="PASS" starttime="20181210 17:53:13.583" endtime="20181210 17:53:13.583"></status>
</kw>
<kw name="Get Column Count" library="ExcelRobot">
<doc>Returns the specific number of columns of the sheet name specified.</doc>
<arguments>
<arg>@{NumberOfExcelSheets}[1]</arg>
</arguments>
<assign>
<var>${nColCount}</var>
</assign>
<msg timestamp="20181210 17:53:13.583" level="INFO">${nColCount} = 7</msg>
<status status="PASS" starttime="20181210 17:53:13.583" endtime="20181210 17:53:13.583"></status>
</kw>
<kw name="${col} IN RANGE [ 3 | 5 ]" type="for">
<kw name="${col} = 3" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:53:15.600" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:53:13.583" endtime="20181210 17:53:15.600"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${col}-1</arg>
</arguments>
<assign>
<var>${Added_Range_StartColumn}</var>
</assign>
<msg timestamp="20181210 17:53:15.600" level="INFO">${Added_Range_StartColumn} = 2</msg>
<status status="PASS" starttime="20181210 17:53:15.600" endtime="20181210 17:53:15.600"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${col}+0</arg>
</arguments>
<assign>
<var>${Added_Range_endColumn}</var>
</assign>
<msg timestamp="20181210 17:53:15.600" level="INFO">${Added_Range_endColumn} = 3</msg>
<status status="PASS" starttime="20181210 17:53:15.600" endtime="20181210 17:53:15.600"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Added_Range_endColumn}+1</arg>
</arguments>
<assign>
<var>${Added_IncentiveColumn}</var>
</assign>
<msg timestamp="20181210 17:53:15.600" level="INFO">${Added_IncentiveColumn} = 4</msg>
<status status="PASS" starttime="20181210 17:53:15.600" endtime="20181210 17:53:15.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${Added_IncentiveColumn}</arg>
<arg>${Added_IncentiveColumn}</arg>
</arguments>
<msg timestamp="20181210 17:53:15.600" level="INFO">${Added_IncentiveColumn} = 4</msg>
<status status="PASS" starttime="20181210 17:53:15.600" endtime="20181210 17:53:15.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${Added_Range_endColumn}</arg>
<arg>${col}</arg>
</arguments>
<msg timestamp="20181210 17:53:15.600" level="INFO">${Added_Range_endColumn} = 3</msg>
<status status="PASS" starttime="20181210 17:53:15.600" endtime="20181210 17:53:15.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${Added_Range_StartColumn}</arg>
<arg>${Added_Range_StartColumn}</arg>
</arguments>
<msg timestamp="20181210 17:53:15.600" level="INFO">${Added_Range_StartColumn} = 2</msg>
<status status="PASS" starttime="20181210 17:53:15.600" endtime="20181210 17:53:15.600"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:13.583" endtime="20181210 17:53:15.600"></status>
</kw>
<kw name="${col} = 4" type="foritem">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:53:17.600" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:53:15.600" endtime="20181210 17:53:17.600"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${col}-1</arg>
</arguments>
<assign>
<var>${Added_Range_StartColumn}</var>
</assign>
<msg timestamp="20181210 17:53:17.600" level="INFO">${Added_Range_StartColumn} = 3</msg>
<status status="PASS" starttime="20181210 17:53:17.600" endtime="20181210 17:53:17.600"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${col}+0</arg>
</arguments>
<assign>
<var>${Added_Range_endColumn}</var>
</assign>
<msg timestamp="20181210 17:53:17.600" level="INFO">${Added_Range_endColumn} = 4</msg>
<status status="PASS" starttime="20181210 17:53:17.600" endtime="20181210 17:53:17.600"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Added_Range_endColumn}+1</arg>
</arguments>
<assign>
<var>${Added_IncentiveColumn}</var>
</assign>
<msg timestamp="20181210 17:53:17.600" level="INFO">${Added_IncentiveColumn} = 5</msg>
<status status="PASS" starttime="20181210 17:53:17.600" endtime="20181210 17:53:17.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${Added_IncentiveColumn}</arg>
<arg>${Added_IncentiveColumn}</arg>
</arguments>
<msg timestamp="20181210 17:53:17.600" level="INFO">${Added_IncentiveColumn} = 5</msg>
<status status="PASS" starttime="20181210 17:53:17.600" endtime="20181210 17:53:17.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${Added_Range_endColumn}</arg>
<arg>${col}</arg>
</arguments>
<msg timestamp="20181210 17:53:17.600" level="INFO">${Added_Range_endColumn} = 4</msg>
<status status="PASS" starttime="20181210 17:53:17.600" endtime="20181210 17:53:17.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${Added_Range_StartColumn}</arg>
<arg>${Added_Range_StartColumn}</arg>
</arguments>
<msg timestamp="20181210 17:53:17.600" level="INFO">${Added_Range_StartColumn} = 3</msg>
<status status="PASS" starttime="20181210 17:53:17.600" endtime="20181210 17:53:17.600"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:15.600" endtime="20181210 17:53:17.600"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:13.583" endtime="20181210 17:53:17.600"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:13.583" endtime="20181210 17:53:17.600"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:13.583" endtime="20181210 17:53:17.600"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns number of elements matching ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-range'])</arg>
</arguments>
<assign>
<var>${get_Existing_Configurations_Count}</var>
</assign>
<msg timestamp="20181210 17:53:17.631" level="INFO">${get_Existing_Configurations_Count} = 11</msg>
<status status="PASS" starttime="20181210 17:53:17.600" endtime="20181210 17:53:17.631"></status>
</kw>
<kw name="${row} IN RANGE [ 1 | ${get_Existing_Configurations_Count}+1 ]" type="for">
<kw name="${row} = 1" type="foritem">
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-range'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Range_Start}</var>
</assign>
<msg timestamp="20181210 17:53:17.662" level="INFO">${Added_Range_Start} = 0.0</msg>
<status status="PASS" starttime="20181210 17:53:17.631" endtime="20181210 17:53:17.662"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//div[@id='range-end'])[ ${row}]/span</arg>
</arguments>
<assign>
<var>${Added_Range_end}</var>
</assign>
<msg timestamp="20181210 17:53:17.694" level="INFO">${Added_Range_end} = 0.9</msg>
<status status="PASS" starttime="20181210 17:53:17.662" endtime="20181210 17:53:17.694"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-amount'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Incentive}</var>
</assign>
<msg timestamp="20181210 17:53:17.725" level="INFO">${Added_Incentive} = 0</msg>
<status status="PASS" starttime="20181210 17:53:17.694" endtime="20181210 17:53:17.725"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_StartColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_Start}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:17.725" endtime="20181210 17:53:17.725"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_endColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_end}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:17.725" endtime="20181210 17:53:17.725"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_IncentiveColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Incentive}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:17.725" endtime="20181210 17:53:17.725"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:17.631" endtime="20181210 17:53:17.725"></status>
</kw>
<kw name="${row} = 2" type="foritem">
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-range'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Range_Start}</var>
</assign>
<msg timestamp="20181210 17:53:17.756" level="INFO">${Added_Range_Start} = 1.0</msg>
<status status="PASS" starttime="20181210 17:53:17.725" endtime="20181210 17:53:17.756"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//div[@id='range-end'])[ ${row}]/span</arg>
</arguments>
<assign>
<var>${Added_Range_end}</var>
</assign>
<msg timestamp="20181210 17:53:17.787" level="INFO">${Added_Range_end} = 9.9</msg>
<status status="PASS" starttime="20181210 17:53:17.756" endtime="20181210 17:53:17.787"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-amount'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Incentive}</var>
</assign>
<msg timestamp="20181210 17:53:17.819" level="INFO">${Added_Incentive} = 100</msg>
<status status="PASS" starttime="20181210 17:53:17.787" endtime="20181210 17:53:17.819"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_StartColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_Start}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:17.819" endtime="20181210 17:53:17.819"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_endColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_end}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:17.819" endtime="20181210 17:53:17.819"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_IncentiveColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Incentive}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:17.819" endtime="20181210 17:53:17.819"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:17.725" endtime="20181210 17:53:17.819"></status>
</kw>
<kw name="${row} = 3" type="foritem">
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-range'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Range_Start}</var>
</assign>
<msg timestamp="20181210 17:53:17.865" level="INFO">${Added_Range_Start} = 10.0</msg>
<status status="PASS" starttime="20181210 17:53:17.819" endtime="20181210 17:53:17.865"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//div[@id='range-end'])[ ${row}]/span</arg>
</arguments>
<assign>
<var>${Added_Range_end}</var>
</assign>
<msg timestamp="20181210 17:53:17.907" level="INFO">${Added_Range_end} = 19.9</msg>
<status status="PASS" starttime="20181210 17:53:17.865" endtime="20181210 17:53:17.907"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-amount'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Incentive}</var>
</assign>
<msg timestamp="20181210 17:53:17.932" level="INFO">${Added_Incentive} = 101</msg>
<status status="PASS" starttime="20181210 17:53:17.907" endtime="20181210 17:53:17.932"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_StartColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_Start}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:17.932" endtime="20181210 17:53:17.932"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_endColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_end}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:17.932" endtime="20181210 17:53:17.932"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_IncentiveColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Incentive}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:17.932" endtime="20181210 17:53:17.932"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:17.819" endtime="20181210 17:53:17.932"></status>
</kw>
<kw name="${row} = 4" type="foritem">
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-range'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Range_Start}</var>
</assign>
<msg timestamp="20181210 17:53:17.979" level="INFO">${Added_Range_Start} = 20.0</msg>
<status status="PASS" starttime="20181210 17:53:17.932" endtime="20181210 17:53:17.979"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//div[@id='range-end'])[ ${row}]/span</arg>
</arguments>
<assign>
<var>${Added_Range_end}</var>
</assign>
<msg timestamp="20181210 17:53:18.112" level="INFO">${Added_Range_end} = 29.9</msg>
<status status="PASS" starttime="20181210 17:53:17.979" endtime="20181210 17:53:18.112"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-amount'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Incentive}</var>
</assign>
<msg timestamp="20181210 17:53:18.158" level="INFO">${Added_Incentive} = 102</msg>
<status status="PASS" starttime="20181210 17:53:18.112" endtime="20181210 17:53:18.158"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_StartColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_Start}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.158" endtime="20181210 17:53:18.158"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_endColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_end}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.158" endtime="20181210 17:53:18.158"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_IncentiveColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Incentive}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.158" endtime="20181210 17:53:18.158"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:17.932" endtime="20181210 17:53:18.158"></status>
</kw>
<kw name="${row} = 5" type="foritem">
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-range'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Range_Start}</var>
</assign>
<msg timestamp="20181210 17:53:18.190" level="INFO">${Added_Range_Start} = 30.0</msg>
<status status="PASS" starttime="20181210 17:53:18.158" endtime="20181210 17:53:18.190"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//div[@id='range-end'])[ ${row}]/span</arg>
</arguments>
<assign>
<var>${Added_Range_end}</var>
</assign>
<msg timestamp="20181210 17:53:18.252" level="INFO">${Added_Range_end} = 39.9</msg>
<status status="PASS" starttime="20181210 17:53:18.190" endtime="20181210 17:53:18.252"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-amount'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Incentive}</var>
</assign>
<msg timestamp="20181210 17:53:18.283" level="INFO">${Added_Incentive} = 103</msg>
<status status="PASS" starttime="20181210 17:53:18.252" endtime="20181210 17:53:18.283"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_StartColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_Start}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.283" endtime="20181210 17:53:18.283"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_endColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_end}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.283" endtime="20181210 17:53:18.283"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_IncentiveColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Incentive}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.283" endtime="20181210 17:53:18.283"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:18.158" endtime="20181210 17:53:18.283"></status>
</kw>
<kw name="${row} = 6" type="foritem">
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-range'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Range_Start}</var>
</assign>
<msg timestamp="20181210 17:53:18.315" level="INFO">${Added_Range_Start} = 40.0</msg>
<status status="PASS" starttime="20181210 17:53:18.283" endtime="20181210 17:53:18.315"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//div[@id='range-end'])[ ${row}]/span</arg>
</arguments>
<assign>
<var>${Added_Range_end}</var>
</assign>
<msg timestamp="20181210 17:53:18.346" level="INFO">${Added_Range_end} = 49.9</msg>
<status status="PASS" starttime="20181210 17:53:18.315" endtime="20181210 17:53:18.346"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-amount'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Incentive}</var>
</assign>
<msg timestamp="20181210 17:53:18.377" level="INFO">${Added_Incentive} = 104</msg>
<status status="PASS" starttime="20181210 17:53:18.346" endtime="20181210 17:53:18.377"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_StartColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_Start}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.377" endtime="20181210 17:53:18.377"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_endColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_end}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.377" endtime="20181210 17:53:18.377"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_IncentiveColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Incentive}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.377" endtime="20181210 17:53:18.377"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:18.283" endtime="20181210 17:53:18.377"></status>
</kw>
<kw name="${row} = 7" type="foritem">
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-range'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Range_Start}</var>
</assign>
<msg timestamp="20181210 17:53:18.408" level="INFO">${Added_Range_Start} = 50.0</msg>
<status status="PASS" starttime="20181210 17:53:18.377" endtime="20181210 17:53:18.408"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//div[@id='range-end'])[ ${row}]/span</arg>
</arguments>
<assign>
<var>${Added_Range_end}</var>
</assign>
<msg timestamp="20181210 17:53:18.440" level="INFO">${Added_Range_end} = 59.9</msg>
<status status="PASS" starttime="20181210 17:53:18.408" endtime="20181210 17:53:18.440"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-amount'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Incentive}</var>
</assign>
<msg timestamp="20181210 17:53:18.471" level="INFO">${Added_Incentive} = 105</msg>
<status status="PASS" starttime="20181210 17:53:18.440" endtime="20181210 17:53:18.471"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_StartColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_Start}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.471" endtime="20181210 17:53:18.471"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_endColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_end}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.471" endtime="20181210 17:53:18.471"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_IncentiveColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Incentive}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.471" endtime="20181210 17:53:18.471"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:18.377" endtime="20181210 17:53:18.471"></status>
</kw>
<kw name="${row} = 8" type="foritem">
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-range'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Range_Start}</var>
</assign>
<msg timestamp="20181210 17:53:18.502" level="INFO">${Added_Range_Start} = 60.0</msg>
<status status="PASS" starttime="20181210 17:53:18.471" endtime="20181210 17:53:18.502"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//div[@id='range-end'])[ ${row}]/span</arg>
</arguments>
<assign>
<var>${Added_Range_end}</var>
</assign>
<msg timestamp="20181210 17:53:18.533" level="INFO">${Added_Range_end} = 69.9</msg>
<status status="PASS" starttime="20181210 17:53:18.502" endtime="20181210 17:53:18.533"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-amount'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Incentive}</var>
</assign>
<msg timestamp="20181210 17:53:18.565" level="INFO">${Added_Incentive} = 106</msg>
<status status="PASS" starttime="20181210 17:53:18.533" endtime="20181210 17:53:18.565"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_StartColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_Start}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.565" endtime="20181210 17:53:18.565"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_endColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_end}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.565" endtime="20181210 17:53:18.565"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_IncentiveColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Incentive}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.565" endtime="20181210 17:53:18.565"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:18.471" endtime="20181210 17:53:18.565"></status>
</kw>
<kw name="${row} = 9" type="foritem">
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-range'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Range_Start}</var>
</assign>
<msg timestamp="20181210 17:53:18.596" level="INFO">${Added_Range_Start} = 70.0</msg>
<status status="PASS" starttime="20181210 17:53:18.565" endtime="20181210 17:53:18.596"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//div[@id='range-end'])[ ${row}]/span</arg>
</arguments>
<assign>
<var>${Added_Range_end}</var>
</assign>
<msg timestamp="20181210 17:53:18.632" level="INFO">${Added_Range_end} = 79.9</msg>
<status status="PASS" starttime="20181210 17:53:18.596" endtime="20181210 17:53:18.632"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-amount'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Incentive}</var>
</assign>
<msg timestamp="20181210 17:53:18.660" level="INFO">${Added_Incentive} = 107</msg>
<status status="PASS" starttime="20181210 17:53:18.632" endtime="20181210 17:53:18.660"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_StartColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_Start}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.660" endtime="20181210 17:53:18.660"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_endColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_end}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.660" endtime="20181210 17:53:18.660"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_IncentiveColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Incentive}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.660" endtime="20181210 17:53:18.660"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:18.565" endtime="20181210 17:53:18.660"></status>
</kw>
<kw name="${row} = 10" type="foritem">
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-range'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Range_Start}</var>
</assign>
<msg timestamp="20181210 17:53:18.692" level="INFO">${Added_Range_Start} = 80.0</msg>
<status status="PASS" starttime="20181210 17:53:18.660" endtime="20181210 17:53:18.692"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//div[@id='range-end'])[ ${row}]/span</arg>
</arguments>
<assign>
<var>${Added_Range_end}</var>
</assign>
<msg timestamp="20181210 17:53:18.723" level="INFO">${Added_Range_end} = 89.9</msg>
<status status="PASS" starttime="20181210 17:53:18.692" endtime="20181210 17:53:18.723"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-amount'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Incentive}</var>
</assign>
<msg timestamp="20181210 17:53:18.754" level="INFO">${Added_Incentive} = 108</msg>
<status status="PASS" starttime="20181210 17:53:18.723" endtime="20181210 17:53:18.754"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_StartColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_Start}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.754" endtime="20181210 17:53:18.754"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_endColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_end}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.754" endtime="20181210 17:53:18.754"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_IncentiveColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Incentive}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.754" endtime="20181210 17:53:18.754"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:18.660" endtime="20181210 17:53:18.754"></status>
</kw>
<kw name="${row} = 11" type="foritem">
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-range'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Range_Start}</var>
</assign>
<msg timestamp="20181210 17:53:18.785" level="INFO">${Added_Range_Start} = 90.0</msg>
<status status="PASS" starttime="20181210 17:53:18.754" endtime="20181210 17:53:18.785"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//div[@id='range-end'])[ ${row}]/span</arg>
</arguments>
<assign>
<var>${Added_Range_end}</var>
</assign>
<msg timestamp="20181210 17:53:18.817" level="INFO">${Added_Range_end} = 100</msg>
<status status="PASS" starttime="20181210 17:53:18.785" endtime="20181210 17:53:18.817"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>(//span[@id='base-amount'])[ ${row}]</arg>
</arguments>
<assign>
<var>${Added_Incentive}</var>
</assign>
<msg timestamp="20181210 17:53:18.848" level="INFO">${Added_Incentive} = 109</msg>
<status status="PASS" starttime="20181210 17:53:18.817" endtime="20181210 17:53:18.848"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_StartColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_Start}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.848" endtime="20181210 17:53:18.863"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_Range_endColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Range_end}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.863" endtime="20181210 17:53:18.863"></status>
</kw>
<kw name="Write To Cell" library="ExcelRobot">
<doc>Write data to cell by using the given sheet name and the given cell that defines by column and row.</doc>
<arguments>
<arg>${ActiveWorksheet}</arg>
<arg>${Added_IncentiveColumn}</arg>
<arg>${row}</arg>
<arg>${Added_Incentive}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:53:18.863" endtime="20181210 17:53:18.863"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:18.754" endtime="20181210 17:53:18.863"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:17.631" endtime="20181210 17:53:18.863"></status>
</kw>
<kw name="Save Excel" library="ExcelRobot">
<doc>Saves the Excel file that was opened to write before.</doc>
<status status="PASS" starttime="20181210 17:53:18.863" endtime="20181210 17:53:18.879"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:13.567" endtime="20181210 17:53:18.879"></status>
</kw>
<kw name="End test" library="CommonKeywords" type="teardown">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20181210 17:53:23.892" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20181210 17:53:18.879" endtime="20181210 17:53:23.892"></status>
</kw>
<kw name="Get Title" library="SeleniumLibrary">
<doc>Returns the title of current page.</doc>
<assign>
<var>${Title}</var>
</assign>
<msg timestamp="20181210 17:53:23.892" level="INFO">${Title} = Driver Safety</msg>
<status status="PASS" starttime="20181210 17:53:23.892" endtime="20181210 17:53:23.892"></status>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20181210 17:53:23.908" endtime="20181210 17:53:26.170"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:18.879" endtime="20181210 17:53:26.170"></status>
</kw>
<status status="PASS" starttime="20181210 17:50:12.010" endtime="20181210 17:53:26.170" critical="yes"></status>
</test>
<doc>DSA-USA:Operations on Driver Score card bonus screen in admin module</doc>
<status status="PASS" starttime="20181210 17:50:10.892" endtime="20181210 17:53:26.170"></status>
</suite>
<suite id="s1-s1-s2" name="Test Upload Files" source="C:\development\robot-scripts\DSA-USA\TestSuites\Admin\Test_Upload_Files.robot">
<test id="s1-s1-s2-t1" name="Driver Files should be uploaded successfully with valid csv file and data">
<kw name="begin test" library="CommonKeywords">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>about:blank</arg>
<arg>${Browser}</arg>
</arguments>
<msg timestamp="20181210 17:53:26.201" level="INFO">Opening browser 'gc' to base url 'about:blank'.</msg>
<status status="PASS" starttime="20181210 17:53:26.201" endtime="20181210 17:53:28.549"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20181210 17:53:28.549" endtime="20181210 17:53:29.706"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the active browser instance to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20181210 17:53:29.706" level="INFO">Opening url 'https://v7iq7:Elephant@9@mysit.gfs.com/driverSafety/#/'</msg>
<status status="PASS" starttime="20181210 17:53:29.706" endtime="20181210 17:53:46.767"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20181210 17:53:51.776" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20181210 17:53:46.768" endtime="20181210 17:53:51.776"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:26.201" endtime="20181210 17:53:51.776"></status>
</kw>
<kw name="Click on Upload Module" library="CommonKeywords">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${App_Modules_list_Xpath}</arg>
</arguments>
<msg timestamp="20181210 17:53:51.776" level="INFO">Clicking element '//ul[@id='app-navbar']/li[5]'.</msg>
<status status="PASS" starttime="20181210 17:53:51.776" endtime="20181210 17:53:51.905"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:51.776" endtime="20181210 17:53:51.905"></status>
</kw>
<kw name="Upload All Violations Files" library="CommonKeywords">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${Violations_Upload_Tab_Xpath}</arg>
</arguments>
<msg timestamp="20181210 17:53:51.906" level="INFO">Clicking element '//tab-heading[contains(text(),'Upload Violations')]'.</msg>
<status status="PASS" starttime="20181210 17:53:51.906" endtime="20181210 17:53:52.526"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20181210 17:54:07.532" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20181210 17:53:52.527" endtime="20181210 17:54:07.532"></status>
</kw>
<kw name="List Files In Directory" library="OperatingSystem">
<doc>Wrapper for `List Directory` that returns only files.</doc>
<arguments>
<arg>C:\\Users\\BLR153\\Desktop\\DSAFileUploads\\Violations</arg>
</arguments>
<assign>
<var>${Files}</var>
</assign>
<msg timestamp="20181210 17:54:07.532" level="INFO" html="yes">Listing contents of directory '&lt;a href="file://C:\Users\BLR153\Desktop\DSAFileUploads\Violations"&gt;C:\Users\BLR153\Desktop\DSAFileUploads\Violations&lt;/a&gt;'.</msg>
<msg timestamp="20181210 17:54:07.532" level="INFO">1 file:
ViolationTemplate.csv</msg>
<msg timestamp="20181210 17:54:07.532" level="INFO">${Files} = ['ViolationTemplate.csv']</msg>
<status status="PASS" starttime="20181210 17:54:07.532" endtime="20181210 17:54:07.532"></status>
</kw>
<kw name="${index} | ${file} IN ENUMERATE [ @{Files} ]" type="for">
<kw name="${index} = 0, ${file} = ViolationTemplate.csv" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"The file at" "${index}" is "${file}"</arg>
</arguments>
<msg timestamp="20181210 17:54:07.532" level="INFO">"The file at" "0" is "ViolationTemplate.csv"</msg>
<status status="PASS" starttime="20181210 17:54:07.532" endtime="20181210 17:54:07.532"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${Driver_Upload_Progress_Message_Xpath}</arg>
</arguments>
<assign>
<var>${FileUploadProgressMessage}</var>
</assign>
<msg timestamp="20181210 17:54:07.595" level="INFO">${FileUploadProgressMessage} = Violations upload started on 12/10/2018 02:37:54 and completed successfully on 12/10/2018 02:37:54</msg>
<status status="PASS" starttime="20181210 17:54:07.532" endtime="20181210 17:54:07.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"The previous file upload status is" ${FileUploadProgressMessage}</arg>
</arguments>
<msg timestamp="20181210 17:54:07.595" level="INFO">"The previous file upload status is" Violations upload started on 12/10/2018 02:37:54 and completed successfully on 12/10/2018 02:37:54</msg>
<status status="PASS" starttime="20181210 17:54:07.595" endtime="20181210 17:54:07.595"></status>
</kw>
<kw name="Choose File" library="SeleniumLibrary">
<doc>Inputs the ``file_path`` into file input field ``locator``.</doc>
<arguments>
<arg>${Violation_input_file}</arg>
<arg>C:\\Users\\BLR153\\Desktop\\DSAFileUploads\\Violations\\${file}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:54:07.595" endtime="20181210 17:54:07.654"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20181210 17:54:10.662" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20181210 17:54:07.654" endtime="20181210 17:54:10.662"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>${Violations_Upload_Button_Xpath}</arg>
</arguments>
<msg timestamp="20181210 17:54:10.662" level="INFO">Clicking button '//button[@ng-disabled='uploadViolation']'.</msg>
<status status="PASS" starttime="20181210 17:54:10.662" endtime="20181210 17:54:10.794"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20181210 17:54:20.795" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20181210 17:54:10.794" endtime="20181210 17:54:20.795"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${Driver_Upload_Progress_Message_Xpath}</arg>
</arguments>
<assign>
<var>${FileUploadProgressMessage}</var>
</assign>
<msg timestamp="20181210 17:54:20.852" level="INFO">${FileUploadProgressMessage} = Violations upload started on 12/10/2018 07:24:10 and completed successfully on 12/10/2018 07:24:11</msg>
<status status="PASS" starttime="20181210 17:54:20.796" endtime="20181210 17:54:20.852"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${Violations_Upload_Status_Message_Xpath}</arg>
</arguments>
<assign>
<var>${UploadFileStatusMessage}</var>
</assign>
<msg timestamp="20181210 17:54:20.883" level="INFO">${UploadFileStatusMessage} = Successfully uploaded records Count : 0 Last Run User : Nagaprakash
Failure Uploaded records Count : 1</msg>
<status status="PASS" starttime="20181210 17:54:20.852" endtime="20181210 17:54:20.883"></status>
</kw>
<status status="PASS" starttime="20181210 17:54:07.532" endtime="20181210 17:54:20.883"></status>
</kw>
<status status="PASS" starttime="20181210 17:54:07.532" endtime="20181210 17:54:20.883"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:51.905" endtime="20181210 17:54:20.883"></status>
</kw>
<kw name="Upload All Driver Files" library="CommonKeywords">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${Driver_Upload_Tab_Xpath}</arg>
</arguments>
<msg timestamp="20181210 17:54:20.883" level="INFO">Clicking element '//tab-heading[@title='Upload Drivers']'.</msg>
<status status="PASS" starttime="20181210 17:54:20.883" endtime="20181210 17:54:20.998"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20181210 17:54:36.003" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20181210 17:54:20.998" endtime="20181210 17:54:36.003"></status>
</kw>
<kw name="List Files In Directory" library="OperatingSystem">
<doc>Wrapper for `List Directory` that returns only files.</doc>
<arguments>
<arg>C:\\Users\\BLR153\\Desktop\\DSAFileUploads\\Drivers</arg>
</arguments>
<assign>
<var>${Files}</var>
</assign>
<msg timestamp="20181210 17:54:36.003" level="INFO" html="yes">Listing contents of directory '&lt;a href="file://C:\Users\BLR153\Desktop\DSAFileUploads\Drivers"&gt;C:\Users\BLR153\Desktop\DSAFileUploads\Drivers&lt;/a&gt;'.</msg>
<msg timestamp="20181210 17:54:36.003" level="INFO">1 file:
DriverTemplate_ValidFile1.csv</msg>
<msg timestamp="20181210 17:54:36.003" level="INFO">${Files} = ['DriverTemplate_ValidFile1.csv']</msg>
<status status="PASS" starttime="20181210 17:54:36.003" endtime="20181210 17:54:36.003"></status>
</kw>
<kw name="${index} | ${file} IN ENUMERATE [ @{Files} ]" type="for">
<kw name="${index} = 0, ${file} = DriverTemplate_ValidFile1.csv" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"The file at" "${index}" is "${file}"</arg>
</arguments>
<msg timestamp="20181210 17:54:36.003" level="INFO">"The file at" "0" is "DriverTemplate_ValidFile1.csv"</msg>
<status status="PASS" starttime="20181210 17:54:36.003" endtime="20181210 17:54:36.003"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${Driver_Upload_Progress_Message_Xpath}</arg>
</arguments>
<assign>
<var>${FileUploadProgressMessage}</var>
</assign>
<msg timestamp="20181210 17:54:36.065" level="INFO">${FileUploadProgressMessage} = Driver File upload started on 12/10/2018 02:38:19 and completed successfully on 12/10/2018 02:38:19</msg>
<status status="PASS" starttime="20181210 17:54:36.003" endtime="20181210 17:54:36.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"The previous file upload status is" ${FileUploadProgressMessage}</arg>
</arguments>
<msg timestamp="20181210 17:54:36.065" level="INFO">"The previous file upload status is" Driver File upload started on 12/10/2018 02:38:19 and completed successfully on 12/10/2018 02:38:19</msg>
<status status="PASS" starttime="20181210 17:54:36.065" endtime="20181210 17:54:36.065"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${Driver_Upload_Progress_Message_Xpath}</arg>
</arguments>
<assign>
<var>${FileUploadProgressMessage}</var>
</assign>
<msg timestamp="20181210 17:54:36.096" level="INFO">${FileUploadProgressMessage} = Driver File upload started on 12/10/2018 02:38:19 and completed successfully on 12/10/2018 02:38:19</msg>
<status status="PASS" starttime="20181210 17:54:36.065" endtime="20181210 17:54:36.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Th</arg>
</arguments>
<msg timestamp="20181210 17:54:36.096" level="INFO">Th</msg>
<status status="PASS" starttime="20181210 17:54:36.096" endtime="20181210 17:54:36.096"></status>
</kw>
<kw name="Choose File" library="SeleniumLibrary">
<doc>Inputs the ``file_path`` into file input field ``locator``.</doc>
<arguments>
<arg>${Driver_input_file}</arg>
<arg>C:\\Users\\BLR153\\Desktop\\DSAFileUploads\\Drivers\\${file}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:54:36.096" endtime="20181210 17:54:36.155"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>${Driver_Upload_Button_Xpath}</arg>
</arguments>
<msg timestamp="20181210 17:54:36.155" level="INFO">Clicking button '//button[@ng-disabled='uploadDriverButton']'.</msg>
<status status="PASS" starttime="20181210 17:54:36.155" endtime="20181210 17:54:36.284"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20181210 17:54:51.287" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20181210 17:54:36.284" endtime="20181210 17:54:51.288"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${Driver_Upload_Progress_Message_Xpath}</arg>
</arguments>
<assign>
<var>${FileUploadProgressMessage}</var>
</assign>
<msg timestamp="20181210 17:54:51.325" level="INFO">${FileUploadProgressMessage} = Driver File upload started on 12/10/2018 07:24:35 and completed successfully on 12/10/2018 07:24:35</msg>
<status status="PASS" starttime="20181210 17:54:51.288" endtime="20181210 17:54:51.326"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${Driver_Upload_Status_Message_Xpath}</arg>
</arguments>
<assign>
<var>${UploadFileStatusMessage}</var>
</assign>
<msg timestamp="20181210 17:54:51.374" level="INFO">${UploadFileStatusMessage} = Successfully uploaded records Count : 0 Last Run User : Nagaprakash
Failure Uploaded records Count : 0</msg>
<status status="PASS" starttime="20181210 17:54:51.326" endtime="20181210 17:54:51.374"></status>
</kw>
<status status="PASS" starttime="20181210 17:54:36.003" endtime="20181210 17:54:51.374"></status>
</kw>
<status status="PASS" starttime="20181210 17:54:36.003" endtime="20181210 17:54:51.374"></status>
</kw>
<status status="PASS" starttime="20181210 17:54:20.883" endtime="20181210 17:54:51.375"></status>
</kw>
<kw name="Upload All MVRData Files" library="CommonKeywords">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${MVRData_Upload_Tab_Xpath}</arg>
</arguments>
<msg timestamp="20181210 17:54:51.375" level="INFO">Clicking element '//tab-heading[@title='Upload MVR Data']'.</msg>
<status status="PASS" starttime="20181210 17:54:51.375" endtime="20181210 17:54:51.487"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20181210 17:55:06.488" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20181210 17:54:51.487" endtime="20181210 17:55:06.488"></status>
</kw>
<kw name="List Files In Directory" library="OperatingSystem">
<doc>Wrapper for `List Directory` that returns only files.</doc>
<arguments>
<arg>C:\\Users\\BLR153\\Desktop\\DSAFileUploads\\MVRData</arg>
</arguments>
<assign>
<var>${Files}</var>
</assign>
<msg timestamp="20181210 17:55:06.490" level="INFO" html="yes">Listing contents of directory '&lt;a href="file://C:\Users\BLR153\Desktop\DSAFileUploads\MVRData"&gt;C:\Users\BLR153\Desktop\DSAFileUploads\MVRData&lt;/a&gt;'.</msg>
<msg timestamp="20181210 17:55:06.491" level="INFO">1 file:
MVRTemplate.csv</msg>
<msg timestamp="20181210 17:55:06.491" level="INFO">${Files} = ['MVRTemplate.csv']</msg>
<status status="PASS" starttime="20181210 17:55:06.489" endtime="20181210 17:55:06.491"></status>
</kw>
<kw name="${index} | ${file} IN ENUMERATE [ @{Files} ]" type="for">
<kw name="${index} = 0, ${file} = MVRTemplate.csv" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"The file at" "${index}" is "${file}"</arg>
</arguments>
<msg timestamp="20181210 17:55:06.494" level="INFO">"The file at" "0" is "MVRTemplate.csv"</msg>
<status status="PASS" starttime="20181210 17:55:06.493" endtime="20181210 17:55:06.494"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${Driver_Upload_Progress_Message_Xpath}</arg>
</arguments>
<assign>
<var>${FileUploadProgressMessage}</var>
</assign>
<msg timestamp="20181210 17:55:06.548" level="INFO">${FileUploadProgressMessage} = </msg>
<status status="PASS" starttime="20181210 17:55:06.494" endtime="20181210 17:55:06.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"The previous file upload status is" ${FileUploadProgressMessage}</arg>
</arguments>
<msg timestamp="20181210 17:55:06.549" level="INFO">"The previous file upload status is" </msg>
<status status="PASS" starttime="20181210 17:55:06.549" endtime="20181210 17:55:06.549"></status>
</kw>
<kw name="Choose File" library="SeleniumLibrary">
<doc>Inputs the ``file_path`` into file input field ``locator``.</doc>
<arguments>
<arg>${mvR_input_file}</arg>
<arg>C:\\Users\\BLR153\\Desktop\\DSAFileUploads\\MVRData\\${file}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:55:06.550" endtime="20181210 17:55:06.613"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20181210 17:55:16.615" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20181210 17:55:06.613" endtime="20181210 17:55:16.615"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>${MVRData_Upload_Button_Xpath}</arg>
</arguments>
<msg timestamp="20181210 17:55:16.616" level="INFO">Clicking button '//button[@ng-disabled='uploadMVRButton']'.</msg>
<status status="PASS" starttime="20181210 17:55:16.615" endtime="20181210 17:55:16.753"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20181210 17:55:26.754" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20181210 17:55:16.753" endtime="20181210 17:55:26.754"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${MVRData_Upload_Status_Message_Xpath}</arg>
</arguments>
<assign>
<var>${UploadFileStatusMessage}</var>
</assign>
<msg timestamp="20181210 17:55:26.844" level="INFO">${UploadFileStatusMessage} = </msg>
<status status="PASS" starttime="20181210 17:55:26.755" endtime="20181210 17:55:26.844"></status>
</kw>
<status status="PASS" starttime="20181210 17:55:06.492" endtime="20181210 17:55:26.845"></status>
</kw>
<status status="PASS" starttime="20181210 17:55:06.491" endtime="20181210 17:55:26.845"></status>
</kw>
<status status="PASS" starttime="20181210 17:54:51.375" endtime="20181210 17:55:26.845"></status>
</kw>
<kw name="Upload All Safety Files" library="CommonKeywords">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${SafetyMiles_Upload_Tab_Xpath}</arg>
</arguments>
<msg timestamp="20181210 17:55:26.846" level="INFO">Clicking element '//tab-heading[@title='Upload Safety Miles']'.</msg>
<status status="PASS" starttime="20181210 17:55:26.846" endtime="20181210 17:55:26.976"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20181210 17:55:41.983" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20181210 17:55:26.977" endtime="20181210 17:55:41.983"></status>
</kw>
<kw name="List Files In Directory" library="OperatingSystem">
<doc>Wrapper for `List Directory` that returns only files.</doc>
<arguments>
<arg>C:\\Users\\BLR153\\Desktop\\DSAFileUploads\\SafetyMiles</arg>
</arguments>
<assign>
<var>${Files}</var>
</assign>
<msg timestamp="20181210 17:55:41.983" level="INFO" html="yes">Listing contents of directory '&lt;a href="file://C:\Users\BLR153\Desktop\DSAFileUploads\SafetyMiles"&gt;C:\Users\BLR153\Desktop\DSAFileUploads\SafetyMiles&lt;/a&gt;'.</msg>
<msg timestamp="20181210 17:55:41.983" level="INFO">1 file:
SafeMilesTemplate.csv</msg>
<msg timestamp="20181210 17:55:41.983" level="INFO">${Files} = ['SafeMilesTemplate.csv']</msg>
<status status="PASS" starttime="20181210 17:55:41.983" endtime="20181210 17:55:41.983"></status>
</kw>
<kw name="${index} | ${file} IN ENUMERATE [ @{Files} ]" type="for">
<kw name="${index} = 0, ${file} = SafeMilesTemplate.csv" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"The file at" "${index}" is "${file}"</arg>
</arguments>
<msg timestamp="20181210 17:55:41.983" level="INFO">"The file at" "0" is "SafeMilesTemplate.csv"</msg>
<status status="PASS" starttime="20181210 17:55:41.983" endtime="20181210 17:55:41.983"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${Driver_Upload_Progress_Message_Xpath}</arg>
</arguments>
<assign>
<var>${FileUploadProgressMessage}</var>
</assign>
<msg timestamp="20181210 17:55:42.045" level="INFO">${FileUploadProgressMessage} = </msg>
<status status="PASS" starttime="20181210 17:55:41.983" endtime="20181210 17:55:42.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"The previous file upload status is" ${FileUploadProgressMessage}</arg>
</arguments>
<msg timestamp="20181210 17:55:42.045" level="INFO">"The previous file upload status is" </msg>
<status status="PASS" starttime="20181210 17:55:42.045" endtime="20181210 17:55:42.045"></status>
</kw>
<kw name="Choose File" library="SeleniumLibrary">
<doc>Inputs the ``file_path`` into file input field ``locator``.</doc>
<arguments>
<arg>${safeMiles_input_file}</arg>
<arg>C:\\Users\\BLR153\\Desktop\\DSAFileUploads\\SafetyMiles\\${file}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:55:42.045" endtime="20181210 17:55:42.103"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20181210 17:55:45.107" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20181210 17:55:42.103" endtime="20181210 17:55:45.107"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>${SafetyMiles_Upload_Button_Xpath}</arg>
</arguments>
<msg timestamp="20181210 17:55:45.107" level="INFO">Clicking button '//button[@ng-disabled='uploadSafeMile']'.</msg>
<status status="PASS" starttime="20181210 17:55:45.107" endtime="20181210 17:55:45.265"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20181210 17:55:55.279" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20181210 17:55:45.266" endtime="20181210 17:55:55.279"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${SafetyMiles_Upload_Status_Message_Xpath}</arg>
</arguments>
<assign>
<var>${UploadFileStatusMessage}</var>
</assign>
<msg timestamp="20181210 17:55:55.326" level="INFO">${UploadFileStatusMessage} = Successfully uploaded records Count : 0 Last Run User : Nagaprakash
Failure Uploaded records Count : 0</msg>
<status status="PASS" starttime="20181210 17:55:55.279" endtime="20181210 17:55:55.326"></status>
</kw>
<status status="PASS" starttime="20181210 17:55:41.983" endtime="20181210 17:55:55.326"></status>
</kw>
<status status="PASS" starttime="20181210 17:55:41.983" endtime="20181210 17:55:55.326"></status>
</kw>
<status status="PASS" starttime="20181210 17:55:26.845" endtime="20181210 17:55:55.326"></status>
</kw>
<kw name="Upload All baseRecord Files" library="CommonKeywords">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${BaseRecords_Upload_Tab_Xpath}</arg>
</arguments>
<msg timestamp="20181210 17:55:55.326" level="INFO">Clicking element '//tab-heading[@title='Upload Base Records']'.</msg>
<status status="PASS" starttime="20181210 17:55:55.326" endtime="20181210 17:55:55.447"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20181210 17:56:10.453" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20181210 17:55:55.447" endtime="20181210 17:56:10.453"></status>
</kw>
<kw name="List Files In Directory" library="OperatingSystem">
<doc>Wrapper for `List Directory` that returns only files.</doc>
<arguments>
<arg>C:\\Users\\BLR153\\Desktop\\DSAFileUploads\\BaseRecords</arg>
</arguments>
<assign>
<var>${Files}</var>
</assign>
<msg timestamp="20181210 17:56:10.453" level="INFO" html="yes">Listing contents of directory '&lt;a href="file://C:\Users\BLR153\Desktop\DSAFileUploads\BaseRecords"&gt;C:\Users\BLR153\Desktop\DSAFileUploads\BaseRecords&lt;/a&gt;'.</msg>
<msg timestamp="20181210 17:56:10.453" level="INFO">1 file:
BaseRecordsTemplate.csv</msg>
<msg timestamp="20181210 17:56:10.453" level="INFO">${Files} = ['BaseRecordsTemplate.csv']</msg>
<status status="PASS" starttime="20181210 17:56:10.453" endtime="20181210 17:56:10.453"></status>
</kw>
<kw name="${index} | ${file} IN ENUMERATE [ @{Files} ]" type="for">
<kw name="${index} = 0, ${file} = BaseRecordsTemplate.csv" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"The file at" "${index}" is "${file}"</arg>
</arguments>
<msg timestamp="20181210 17:56:10.453" level="INFO">"The file at" "0" is "BaseRecordsTemplate.csv"</msg>
<status status="PASS" starttime="20181210 17:56:10.453" endtime="20181210 17:56:10.453"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${Driver_Upload_Progress_Message_Xpath}</arg>
</arguments>
<assign>
<var>${FileUploadProgressMessage}</var>
</assign>
<msg timestamp="20181210 17:56:10.500" level="INFO">${FileUploadProgressMessage} = </msg>
<status status="PASS" starttime="20181210 17:56:10.453" endtime="20181210 17:56:10.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"The previous file upload status is" ${FileUploadProgressMessage}</arg>
</arguments>
<msg timestamp="20181210 17:56:10.500" level="INFO">"The previous file upload status is" </msg>
<status status="PASS" starttime="20181210 17:56:10.500" endtime="20181210 17:56:10.500"></status>
</kw>
<kw name="Choose File" library="SeleniumLibrary">
<doc>Inputs the ``file_path`` into file input field ``locator``.</doc>
<arguments>
<arg>${baseRecords_input_file}</arg>
<arg>C:\\Users\\BLR153\\Desktop\\DSAFileUploads\\BaseRecords\\${file}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:56:10.500" endtime="20181210 17:56:10.552"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20181210 17:56:13.560" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20181210 17:56:10.553" endtime="20181210 17:56:13.560"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>${BaseRecords_Upload_Button_Xpath}</arg>
</arguments>
<msg timestamp="20181210 17:56:13.560" level="INFO">Clicking button '//button[@ng-disabled='uploadBaseRecord']'.</msg>
<status status="PASS" starttime="20181210 17:56:13.560" endtime="20181210 17:56:13.740"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20181210 17:56:23.741" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20181210 17:56:13.740" endtime="20181210 17:56:23.741"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${BaseRecords_Upload_Status_Message_Xpath}</arg>
</arguments>
<assign>
<var>${UploadFileStatusMessage}</var>
</assign>
<msg timestamp="20181210 17:56:23.803" level="INFO">${UploadFileStatusMessage} = Successfully uploaded records Count : 0 Last Run User : Nagaprakash
Failure Uploaded records Count : 0</msg>
<status status="PASS" starttime="20181210 17:56:23.741" endtime="20181210 17:56:23.803"></status>
</kw>
<status status="PASS" starttime="20181210 17:56:10.453" endtime="20181210 17:56:23.803"></status>
</kw>
<status status="PASS" starttime="20181210 17:56:10.453" endtime="20181210 17:56:23.803"></status>
</kw>
<status status="PASS" starttime="20181210 17:55:55.326" endtime="20181210 17:56:23.803"></status>
</kw>
<kw name="Upload All License Details Files" library="CommonKeywords">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${LicenseDetails_Upload_Tab_Xpath}</arg>
</arguments>
<msg timestamp="20181210 17:56:23.803" level="INFO">Clicking element '//tab-heading[@title='Upload License Details']'.</msg>
<status status="PASS" starttime="20181210 17:56:23.803" endtime="20181210 17:56:23.921"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20181210 17:56:38.922" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20181210 17:56:23.921" endtime="20181210 17:56:38.922"></status>
</kw>
<kw name="List Files In Directory" library="OperatingSystem">
<doc>Wrapper for `List Directory` that returns only files.</doc>
<arguments>
<arg>C:\\Users\\BLR153\\Desktop\\DSAFileUploads\\LicenseDetails</arg>
</arguments>
<assign>
<var>${Files}</var>
</assign>
<msg timestamp="20181210 17:56:38.923" level="INFO" html="yes">Listing contents of directory '&lt;a href="file://C:\Users\BLR153\Desktop\DSAFileUploads\LicenseDetails"&gt;C:\Users\BLR153\Desktop\DSAFileUploads\LicenseDetails&lt;/a&gt;'.</msg>
<msg timestamp="20181210 17:56:38.923" level="INFO">1 file:
LicenseTemplate.csv</msg>
<msg timestamp="20181210 17:56:38.923" level="INFO">${Files} = ['LicenseTemplate.csv']</msg>
<status status="PASS" starttime="20181210 17:56:38.923" endtime="20181210 17:56:38.923"></status>
</kw>
<kw name="${index} | ${file} IN ENUMERATE [ @{Files} ]" type="for">
<kw name="${index} = 0, ${file} = LicenseTemplate.csv" type="foritem">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"The file at" "${index}" is "${file}"</arg>
</arguments>
<msg timestamp="20181210 17:56:38.923" level="INFO">"The file at" "0" is "LicenseTemplate.csv"</msg>
<status status="PASS" starttime="20181210 17:56:38.923" endtime="20181210 17:56:38.923"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${Driver_Upload_Progress_Message_Xpath}</arg>
</arguments>
<assign>
<var>${FileUploadProgressMessage}</var>
</assign>
<msg timestamp="20181210 17:56:38.970" level="INFO">${FileUploadProgressMessage} = </msg>
<status status="PASS" starttime="20181210 17:56:38.923" endtime="20181210 17:56:38.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"The previous file upload status is" ${FileUploadProgressMessage}</arg>
</arguments>
<msg timestamp="20181210 17:56:38.970" level="INFO">"The previous file upload status is" </msg>
<status status="PASS" starttime="20181210 17:56:38.970" endtime="20181210 17:56:38.970"></status>
</kw>
<kw name="Choose File" library="SeleniumLibrary">
<doc>Inputs the ``file_path`` into file input field ``locator``.</doc>
<arguments>
<arg>${license_input_file}</arg>
<arg>C:\\Users\\BLR153\\Desktop\\DSAFileUploads\\LicenseDetails\\${file}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:56:38.970" endtime="20181210 17:56:39.022"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20181210 17:56:42.030" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20181210 17:56:39.023" endtime="20181210 17:56:42.030"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>${LicenseDetails_Upload_Button_Xpath}</arg>
</arguments>
<msg timestamp="20181210 17:56:42.030" level="INFO">Clicking button '//button[@ng-disabled='uploadLicenseButton']'.</msg>
<status status="PASS" starttime="20181210 17:56:42.030" endtime="20181210 17:56:42.193"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20181210 17:56:52.194" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20181210 17:56:42.193" endtime="20181210 17:56:52.194"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${LicenseDetails_Upload_Status_Message_Xpath}</arg>
</arguments>
<assign>
<var>${UploadFileStatusMessage}</var>
</assign>
<msg timestamp="20181210 17:56:52.257" level="INFO">${UploadFileStatusMessage} = Successfully uploaded records Count : 0 Last Run User : Nagaprakash
Failure Uploaded records Count : 0</msg>
<status status="PASS" starttime="20181210 17:56:52.195" endtime="20181210 17:56:52.257"></status>
</kw>
<status status="PASS" starttime="20181210 17:56:38.923" endtime="20181210 17:56:52.257"></status>
</kw>
<status status="PASS" starttime="20181210 17:56:38.923" endtime="20181210 17:56:52.257"></status>
</kw>
<status status="PASS" starttime="20181210 17:56:23.803" endtime="20181210 17:56:52.257"></status>
</kw>
<status status="PASS" starttime="20181210 17:53:26.201" endtime="20181210 17:56:52.257" critical="yes"></status>
</test>
<status status="PASS" starttime="20181210 17:53:26.186" endtime="20181210 17:56:52.257"></status>
</suite>
<status status="PASS" starttime="20181210 17:50:10.890" endtime="20181210 17:56:52.257"></status>
</suite>
<suite id="s1-s2" name="Bonuses Module" source="C:\development\robot-scripts\DSA-USA\TestSuites\Bonuses_Module">
<suite id="s1-s2-s1" name="Bonuses Tab 03 Driver Score Card" source="C:\development\robot-scripts\DSA-USA\TestSuites\Bonuses_Module\Bonuses_Tab_03_Driver_Score_Card.robot">
<test id="s1-s2-s1-t1" name="TC_01_Testing Bonus module - Driver score card web table and export features">
<kw name="begin test" library="CommonKeywords" type="setup">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>about:blank</arg>
<arg>${Browser}</arg>
</arguments>
<msg timestamp="20181210 17:56:52.273" level="INFO">Opening browser 'gc' to base url 'about:blank'.</msg>
<status status="PASS" starttime="20181210 17:56:52.273" endtime="20181210 17:56:55.285"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20181210 17:56:55.285" endtime="20181210 17:56:56.425"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the active browser instance to the provided ``url``.</doc>
<arguments>
<arg>${URL}</arg>
</arguments>
<msg timestamp="20181210 17:56:56.427" level="INFO">Opening url 'https://v7iq7:Elephant@9@mysit.gfs.com/driverSafety/#/'</msg>
<status status="PASS" starttime="20181210 17:56:56.426" endtime="20181210 17:57:12.855"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20181210 17:57:17.856" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20181210 17:57:12.855" endtime="20181210 17:57:17.856"></status>
</kw>
<status status="PASS" starttime="20181210 17:56:52.273" endtime="20181210 17:57:17.857"></status>
</kw>
<kw name="Read incentive Amounts from grid - Driver Score Card tab under Bonuses Module">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>//li[@class='dropdown ng-scope']//a[@class='ng-binding'][contains(text(),'Bonuses')]</arg>
</arguments>
<msg timestamp="20181210 17:57:17.859" level="INFO">Clicking element '//li[@class='dropdown ng-scope']//a[@class='ng-binding'][contains(text(),'Bonuses')]'.</msg>
<status status="PASS" starttime="20181210 17:57:17.858" endtime="20181210 17:57:18.013"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>7s</arg>
</arguments>
<msg timestamp="20181210 17:57:25.013" level="INFO">Slept 7 seconds</msg>
<status status="PASS" starttime="20181210 17:57:18.013" endtime="20181210 17:57:25.013"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>//li[@title='Driver Scorecard']//a[@class='ng-binding'][contains(text(),'Driver Scorecard')]</arg>
</arguments>
<msg timestamp="20181210 17:57:25.014" level="INFO">Clicking element '//li[@title='Driver Scorecard']//a[@class='ng-binding'][contains(text(),'Driver Scorecard')]'.</msg>
<status status="PASS" starttime="20181210 17:57:25.014" endtime="20181210 17:57:25.169"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20181210 17:57:27.171" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20181210 17:57:25.170" endtime="20181210 17:57:27.171"></status>
</kw>
<kw name="Select From List By Index" library="SeleniumLibrary">
<doc>Selects options from selection list ``locator`` by ``indexes``.</doc>
<arguments>
<arg>//select[@id='fiscalQuarter']</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20181210 17:57:27.173" level="INFO">Selecting options from selection list '//select[@id='fiscalQuarter']' by index 1.</msg>
<status status="PASS" starttime="20181210 17:57:27.172" endtime="20181210 17:57:28.317"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>15s</arg>
</arguments>
<msg timestamp="20181210 17:57:43.319" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20181210 17:57:28.317" endtime="20181210 17:57:43.319"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns number of elements matching ``locator``.</doc>
<arguments>
<arg>//div[@ng-repeat="row in renderedRows"]//div[contains(@class,'colt9')]</arg>
</arguments>
<assign>
<var>${NumberOfIncentiveAmountRows}</var>
</assign>
<msg timestamp="20181210 17:57:43.384" level="INFO">${NumberOfIncentiveAmountRows} = 17</msg>
<status status="PASS" starttime="20181210 17:57:43.319" endtime="20181210 17:57:43.384"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>${IncentiveAmountList}</var>
</assign>
<msg timestamp="20181210 17:57:43.384" level="INFO">${IncentiveAmountList} = []</msg>
<status status="PASS" starttime="20181210 17:57:43.384" endtime="20181210 17:57:43.384"></status>
</kw>
<kw name="${Index} IN RANGE [ 0 | ${NumberOfIncentiveAmountRows} ]" type="for">
<kw name="${Index} = 0" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Index}+1</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20181210 17:57:43.385" level="INFO">${Index} = 1</msg>
<status status="PASS" starttime="20181210 17:57:43.385" endtime="20181210 17:57:43.385"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>//div/div[4]/div/div[2]/div/div[${Index}]//div[8]//div[2]//span</arg>
</arguments>
<assign>
<var>${IncentiveAmount}</var>
</assign>
<msg timestamp="20181210 17:57:43.430" level="INFO">${IncentiveAmount} = 109</msg>
<status status="PASS" starttime="20181210 17:57:43.385" endtime="20181210 17:57:43.430"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${IncentiveAmountList}</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:57:43.430" endtime="20181210 17:57:43.430"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:43.385" endtime="20181210 17:57:43.430"></status>
</kw>
<kw name="${Index} = 1" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Index}+1</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20181210 17:57:43.431" level="INFO">${Index} = 2</msg>
<status status="PASS" starttime="20181210 17:57:43.430" endtime="20181210 17:57:43.431"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>//div/div[4]/div/div[2]/div/div[${Index}]//div[8]//div[2]//span</arg>
</arguments>
<assign>
<var>${IncentiveAmount}</var>
</assign>
<msg timestamp="20181210 17:57:43.475" level="INFO">${IncentiveAmount} = 109</msg>
<status status="PASS" starttime="20181210 17:57:43.431" endtime="20181210 17:57:43.475"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${IncentiveAmountList}</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:57:43.476" endtime="20181210 17:57:43.476"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:43.430" endtime="20181210 17:57:43.476"></status>
</kw>
<kw name="${Index} = 2" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Index}+1</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20181210 17:57:43.477" level="INFO">${Index} = 3</msg>
<status status="PASS" starttime="20181210 17:57:43.476" endtime="20181210 17:57:43.477"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>//div/div[4]/div/div[2]/div/div[${Index}]//div[8]//div[2]//span</arg>
</arguments>
<assign>
<var>${IncentiveAmount}</var>
</assign>
<msg timestamp="20181210 17:57:43.512" level="INFO">${IncentiveAmount} = 109</msg>
<status status="PASS" starttime="20181210 17:57:43.477" endtime="20181210 17:57:43.512"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${IncentiveAmountList}</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:57:43.512" endtime="20181210 17:57:43.512"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:43.476" endtime="20181210 17:57:43.512"></status>
</kw>
<kw name="${Index} = 3" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Index}+1</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20181210 17:57:43.512" level="INFO">${Index} = 4</msg>
<status status="PASS" starttime="20181210 17:57:43.512" endtime="20181210 17:57:43.512"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>//div/div[4]/div/div[2]/div/div[${Index}]//div[8]//div[2]//span</arg>
</arguments>
<assign>
<var>${IncentiveAmount}</var>
</assign>
<msg timestamp="20181210 17:57:43.565" level="INFO">${IncentiveAmount} = 104</msg>
<status status="PASS" starttime="20181210 17:57:43.512" endtime="20181210 17:57:43.565"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${IncentiveAmountList}</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:57:43.565" endtime="20181210 17:57:43.566"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:43.512" endtime="20181210 17:57:43.566"></status>
</kw>
<kw name="${Index} = 4" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Index}+1</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20181210 17:57:43.566" level="INFO">${Index} = 5</msg>
<status status="PASS" starttime="20181210 17:57:43.566" endtime="20181210 17:57:43.566"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>//div/div[4]/div/div[2]/div/div[${Index}]//div[8]//div[2]//span</arg>
</arguments>
<assign>
<var>${IncentiveAmount}</var>
</assign>
<msg timestamp="20181210 17:57:43.623" level="INFO">${IncentiveAmount} = </msg>
<status status="PASS" starttime="20181210 17:57:43.566" endtime="20181210 17:57:43.623"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${IncentiveAmountList}</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:57:43.624" endtime="20181210 17:57:43.624"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:43.566" endtime="20181210 17:57:43.624"></status>
</kw>
<kw name="${Index} = 5" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Index}+1</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20181210 17:57:43.624" level="INFO">${Index} = 6</msg>
<status status="PASS" starttime="20181210 17:57:43.624" endtime="20181210 17:57:43.624"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>//div/div[4]/div/div[2]/div/div[${Index}]//div[8]//div[2]//span</arg>
</arguments>
<assign>
<var>${IncentiveAmount}</var>
</assign>
<msg timestamp="20181210 17:57:43.693" level="INFO">${IncentiveAmount} = </msg>
<status status="PASS" starttime="20181210 17:57:43.625" endtime="20181210 17:57:43.693"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${IncentiveAmountList}</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:57:43.694" endtime="20181210 17:57:43.694"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:43.624" endtime="20181210 17:57:43.694"></status>
</kw>
<kw name="${Index} = 6" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Index}+1</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20181210 17:57:43.694" level="INFO">${Index} = 7</msg>
<status status="PASS" starttime="20181210 17:57:43.694" endtime="20181210 17:57:43.694"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>//div/div[4]/div/div[2]/div/div[${Index}]//div[8]//div[2]//span</arg>
</arguments>
<assign>
<var>${IncentiveAmount}</var>
</assign>
<msg timestamp="20181210 17:57:43.737" level="INFO">${IncentiveAmount} = 109</msg>
<status status="PASS" starttime="20181210 17:57:43.695" endtime="20181210 17:57:43.737"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${IncentiveAmountList}</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:57:43.737" endtime="20181210 17:57:43.737"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:43.694" endtime="20181210 17:57:43.737"></status>
</kw>
<kw name="${Index} = 7" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Index}+1</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20181210 17:57:43.738" level="INFO">${Index} = 8</msg>
<status status="PASS" starttime="20181210 17:57:43.737" endtime="20181210 17:57:43.738"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>//div/div[4]/div/div[2]/div/div[${Index}]//div[8]//div[2]//span</arg>
</arguments>
<assign>
<var>${IncentiveAmount}</var>
</assign>
<msg timestamp="20181210 17:57:43.781" level="INFO">${IncentiveAmount} = </msg>
<status status="PASS" starttime="20181210 17:57:43.738" endtime="20181210 17:57:43.781"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${IncentiveAmountList}</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:57:43.781" endtime="20181210 17:57:43.782"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:43.737" endtime="20181210 17:57:43.782"></status>
</kw>
<kw name="${Index} = 8" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Index}+1</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20181210 17:57:43.782" level="INFO">${Index} = 9</msg>
<status status="PASS" starttime="20181210 17:57:43.782" endtime="20181210 17:57:43.782"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>//div/div[4]/div/div[2]/div/div[${Index}]//div[8]//div[2]//span</arg>
</arguments>
<assign>
<var>${IncentiveAmount}</var>
</assign>
<msg timestamp="20181210 17:57:43.824" level="INFO">${IncentiveAmount} = 102</msg>
<status status="PASS" starttime="20181210 17:57:43.782" endtime="20181210 17:57:43.824"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${IncentiveAmountList}</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:57:43.825" endtime="20181210 17:57:43.825"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:43.782" endtime="20181210 17:57:43.825"></status>
</kw>
<kw name="${Index} = 9" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Index}+1</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20181210 17:57:43.826" level="INFO">${Index} = 10</msg>
<status status="PASS" starttime="20181210 17:57:43.825" endtime="20181210 17:57:43.826"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>//div/div[4]/div/div[2]/div/div[${Index}]//div[8]//div[2]//span</arg>
</arguments>
<assign>
<var>${IncentiveAmount}</var>
</assign>
<msg timestamp="20181210 17:57:43.869" level="INFO">${IncentiveAmount} = </msg>
<status status="PASS" starttime="20181210 17:57:43.826" endtime="20181210 17:57:43.869"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${IncentiveAmountList}</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:57:43.870" endtime="20181210 17:57:43.870"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:43.825" endtime="20181210 17:57:43.870"></status>
</kw>
<kw name="${Index} = 10" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Index}+1</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20181210 17:57:43.871" level="INFO">${Index} = 11</msg>
<status status="PASS" starttime="20181210 17:57:43.870" endtime="20181210 17:57:43.871"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>//div/div[4]/div/div[2]/div/div[${Index}]//div[8]//div[2]//span</arg>
</arguments>
<assign>
<var>${IncentiveAmount}</var>
</assign>
<msg timestamp="20181210 17:57:43.914" level="INFO">${IncentiveAmount} = </msg>
<status status="PASS" starttime="20181210 17:57:43.871" endtime="20181210 17:57:43.914"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${IncentiveAmountList}</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:57:43.914" endtime="20181210 17:57:43.914"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:43.870" endtime="20181210 17:57:43.914"></status>
</kw>
<kw name="${Index} = 11" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Index}+1</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20181210 17:57:43.915" level="INFO">${Index} = 12</msg>
<status status="PASS" starttime="20181210 17:57:43.915" endtime="20181210 17:57:43.915"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>//div/div[4]/div/div[2]/div/div[${Index}]//div[8]//div[2]//span</arg>
</arguments>
<assign>
<var>${IncentiveAmount}</var>
</assign>
<msg timestamp="20181210 17:57:43.959" level="INFO">${IncentiveAmount} = </msg>
<status status="PASS" starttime="20181210 17:57:43.915" endtime="20181210 17:57:43.959"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${IncentiveAmountList}</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:57:43.959" endtime="20181210 17:57:43.960"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:43.914" endtime="20181210 17:57:43.960"></status>
</kw>
<kw name="${Index} = 12" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Index}+1</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20181210 17:57:43.961" level="INFO">${Index} = 13</msg>
<status status="PASS" starttime="20181210 17:57:43.960" endtime="20181210 17:57:43.961"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>//div/div[4]/div/div[2]/div/div[${Index}]//div[8]//div[2]//span</arg>
</arguments>
<assign>
<var>${IncentiveAmount}</var>
</assign>
<msg timestamp="20181210 17:57:44.005" level="INFO">${IncentiveAmount} = 109</msg>
<status status="PASS" starttime="20181210 17:57:43.961" endtime="20181210 17:57:44.005"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${IncentiveAmountList}</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:57:44.005" endtime="20181210 17:57:44.005"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:43.960" endtime="20181210 17:57:44.005"></status>
</kw>
<kw name="${Index} = 13" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Index}+1</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20181210 17:57:44.006" level="INFO">${Index} = 14</msg>
<status status="PASS" starttime="20181210 17:57:44.006" endtime="20181210 17:57:44.006"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>//div/div[4]/div/div[2]/div/div[${Index}]//div[8]//div[2]//span</arg>
</arguments>
<assign>
<var>${IncentiveAmount}</var>
</assign>
<msg timestamp="20181210 17:57:44.051" level="INFO">${IncentiveAmount} = 109</msg>
<status status="PASS" starttime="20181210 17:57:44.006" endtime="20181210 17:57:44.051"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${IncentiveAmountList}</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:57:44.052" endtime="20181210 17:57:44.052"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:44.005" endtime="20181210 17:57:44.052"></status>
</kw>
<kw name="${Index} = 14" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Index}+1</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20181210 17:57:44.053" level="INFO">${Index} = 15</msg>
<status status="PASS" starttime="20181210 17:57:44.052" endtime="20181210 17:57:44.053"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>//div/div[4]/div/div[2]/div/div[${Index}]//div[8]//div[2]//span</arg>
</arguments>
<assign>
<var>${IncentiveAmount}</var>
</assign>
<msg timestamp="20181210 17:57:44.095" level="INFO">${IncentiveAmount} = 109</msg>
<status status="PASS" starttime="20181210 17:57:44.053" endtime="20181210 17:57:44.095"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${IncentiveAmountList}</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:57:44.095" endtime="20181210 17:57:44.096"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:44.052" endtime="20181210 17:57:44.096"></status>
</kw>
<kw name="${Index} = 15" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Index}+1</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20181210 17:57:44.097" level="INFO">${Index} = 16</msg>
<status status="PASS" starttime="20181210 17:57:44.097" endtime="20181210 17:57:44.097"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>//div/div[4]/div/div[2]/div/div[${Index}]//div[8]//div[2]//span</arg>
</arguments>
<assign>
<var>${IncentiveAmount}</var>
</assign>
<msg timestamp="20181210 17:57:44.155" level="INFO">${IncentiveAmount} = </msg>
<status status="PASS" starttime="20181210 17:57:44.097" endtime="20181210 17:57:44.155"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${IncentiveAmountList}</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:57:44.156" endtime="20181210 17:57:44.156"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:44.096" endtime="20181210 17:57:44.156"></status>
</kw>
<kw name="${Index} = 16" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${Index}+1</arg>
</arguments>
<assign>
<var>${Index}</var>
</assign>
<msg timestamp="20181210 17:57:44.157" level="INFO">${Index} = 17</msg>
<status status="PASS" starttime="20181210 17:57:44.157" endtime="20181210 17:57:44.157"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>//div/div[4]/div/div[2]/div/div[${Index}]//div[8]//div[2]//span</arg>
</arguments>
<assign>
<var>${IncentiveAmount}</var>
</assign>
<msg timestamp="20181210 17:57:44.225" level="INFO">${IncentiveAmount} = </msg>
<status status="PASS" starttime="20181210 17:57:44.157" endtime="20181210 17:57:44.225"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${IncentiveAmountList}</arg>
<arg>${IncentiveAmount}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:57:44.226" endtime="20181210 17:57:44.226"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:44.156" endtime="20181210 17:57:44.226"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:43.384" endtime="20181210 17:57:44.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${IncentiveAmountList}</arg>
</arguments>
<msg timestamp="20181210 17:57:44.227" level="INFO">['109', '109', '109', '104', '', '', '109', '', '102', '', '', '', '109', '109', '109', '', '']</msg>
<status status="PASS" starttime="20181210 17:57:44.226" endtime="20181210 17:57:44.228"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:17.857" endtime="20181210 17:57:44.228"></status>
</kw>
<kw name="Export Driver Score Card in CSV file for all Fiscal Quarters in Bonuses">
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<arguments>
<arg>//label[contains(text(),'Fiscal Quarter')]</arg>
</arguments>
<msg timestamp="20181210 17:57:44.251" level="INFO">Current page contains element '//label[contains(text(),'Fiscal Quarter')]'.</msg>
<status status="PASS" starttime="20181210 17:57:44.228" endtime="20181210 17:57:44.251"></status>
</kw>
<kw name="Get List Items" library="SeleniumLibrary">
<doc>Returns all labels or values of selection list ``locator``.</doc>
<arguments>
<arg>//select[@id='fiscalQuarter']</arg>
</arguments>
<assign>
<var>${FiscalQuarterDropDownValues}</var>
</assign>
<msg timestamp="20181210 17:57:44.424" level="INFO">${FiscalQuarterDropDownValues} = ['Select ', '2018-3', '2018-2', '2018-1', '2017-4', '2017-3', '2017-2', '2017-1']</msg>
<status status="PASS" starttime="20181210 17:57:44.251" endtime="20181210 17:57:44.424"></status>
</kw>
<kw name="Remove From List" library="Collections">
<doc>Removes and returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${FiscalQuarterDropDownValues}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20181210 17:57:44.424" endtime="20181210 17:57:44.424"></status>
</kw>
<kw name="Sort List" library="Collections">
<doc>Sorts the given list in place.</doc>
<arguments>
<arg>${FiscalQuarterDropDownValues}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:57:44.424" endtime="20181210 17:57:44.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${FiscalQuarterDropDownValues}</arg>
</arguments>
<msg timestamp="20181210 17:57:44.425" level="INFO">['2017-1', '2017-2', '2017-3', '2017-4', '2018-1', '2018-2', '2018-3']</msg>
<status status="PASS" starttime="20181210 17:57:44.425" endtime="20181210 17:57:44.425"></status>
</kw>
<kw name="${FiscalQuarter} IN [ @{FiscalQuarterDropDownValues} ]" type="for">
<kw name="${FiscalQuarter} = 2017-1" type="foritem">
<kw name="Select from FiscalQuarters dropdown by value">
<arguments>
<arg>//select[@id='fiscalQuarter']</arg>
<arg>${FiscalQuarter}</arg>
</arguments>
<kw name="Focus" library="SeleniumLibrary">
<doc>Deprecated. Use `Set Focus To Element` instead.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20181210 17:57:44.426" endtime="20181210 17:57:44.449"></status>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${select value}</arg>
</arguments>
<msg timestamp="20181210 17:57:44.449" level="INFO">Selecting options from selection list '//select[@id='fiscalQuarter']' by label 2017-1.</msg>
<status status="PASS" starttime="20181210 17:57:44.449" endtime="20181210 17:57:44.662"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>20s</arg>
</arguments>
<msg timestamp="20181210 17:58:04.665" level="INFO">Slept 20 seconds</msg>
<status status="PASS" starttime="20181210 17:57:44.662" endtime="20181210 17:58:04.666"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:44.425" endtime="20181210 17:58:04.666"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>60s</arg>
</arguments>
<status status="PASS" starttime="20181210 17:58:04.667" endtime="20181210 17:58:04.674"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[contains(text(),'Recalculate')]</arg>
</arguments>
<status status="PASS" starttime="20181210 17:58:04.674" endtime="20181210 17:58:04.750"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[contains(text(),'Recalculate')]</arg>
</arguments>
<msg timestamp="20181210 17:58:04.750" level="INFO">Clicking button '//button[contains(text(),'Recalculate')]'.</msg>
<status status="PASS" starttime="20181210 17:58:04.750" endtime="20181210 17:58:05.056"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>240s</arg>
</arguments>
<msg timestamp="20181210 18:02:05.060" level="INFO">Slept 4 minutes</msg>
<status status="PASS" starttime="20181210 17:58:05.057" endtime="20181210 18:02:05.060"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@data-ng-click="exportScores()"]</arg>
</arguments>
<status status="PASS" starttime="20181210 18:02:05.060" endtime="20181210 18:02:05.138"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[@data-ng-click="exportScores()"]</arg>
</arguments>
<msg timestamp="20181210 18:02:05.138" level="INFO">Clicking button '//button[@data-ng-click="exportScores()"]'.</msg>
<status status="PASS" starttime="20181210 18:02:05.138" endtime="20181210 18:02:05.302"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20181210 18:02:15.314" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20181210 18:02:05.302" endtime="20181210 18:02:15.314"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:44.425" endtime="20181210 18:02:15.314"></status>
</kw>
<kw name="${FiscalQuarter} = 2017-2" type="foritem">
<kw name="Select from FiscalQuarters dropdown by value">
<arguments>
<arg>//select[@id='fiscalQuarter']</arg>
<arg>${FiscalQuarter}</arg>
</arguments>
<kw name="Focus" library="SeleniumLibrary">
<doc>Deprecated. Use `Set Focus To Element` instead.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20181210 18:02:15.314" endtime="20181210 18:02:15.386"></status>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${select value}</arg>
</arguments>
<msg timestamp="20181210 18:02:15.387" level="INFO">Selecting options from selection list '//select[@id='fiscalQuarter']' by label 2017-2.</msg>
<status status="PASS" starttime="20181210 18:02:15.386" endtime="20181210 18:02:15.583"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>20s</arg>
</arguments>
<msg timestamp="20181210 18:02:35.592" level="INFO">Slept 20 seconds</msg>
<status status="PASS" starttime="20181210 18:02:15.584" endtime="20181210 18:02:35.592"></status>
</kw>
<status status="PASS" starttime="20181210 18:02:15.314" endtime="20181210 18:02:35.592"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>60s</arg>
</arguments>
<status status="PASS" starttime="20181210 18:02:35.592" endtime="20181210 18:02:35.592"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[contains(text(),'Recalculate')]</arg>
</arguments>
<status status="PASS" starttime="20181210 18:02:35.592" endtime="20181210 18:02:35.654"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[contains(text(),'Recalculate')]</arg>
</arguments>
<msg timestamp="20181210 18:02:35.654" level="INFO">Clicking button '//button[contains(text(),'Recalculate')]'.</msg>
<status status="PASS" starttime="20181210 18:02:35.654" endtime="20181210 18:02:36.001"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>240s</arg>
</arguments>
<msg timestamp="20181210 18:06:36.003" level="INFO">Slept 4 minutes</msg>
<status status="PASS" starttime="20181210 18:02:36.001" endtime="20181210 18:06:36.003"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@data-ng-click="exportScores()"]</arg>
</arguments>
<status status="PASS" starttime="20181210 18:06:36.004" endtime="20181210 18:06:36.067"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[@data-ng-click="exportScores()"]</arg>
</arguments>
<msg timestamp="20181210 18:06:36.068" level="INFO">Clicking button '//button[@data-ng-click="exportScores()"]'.</msg>
<status status="PASS" starttime="20181210 18:06:36.068" endtime="20181210 18:06:36.337"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20181210 18:06:46.338" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20181210 18:06:36.338" endtime="20181210 18:06:46.338"></status>
</kw>
<status status="PASS" starttime="20181210 18:02:15.314" endtime="20181210 18:06:46.338"></status>
</kw>
<kw name="${FiscalQuarter} = 2017-3" type="foritem">
<kw name="Select from FiscalQuarters dropdown by value">
<arguments>
<arg>//select[@id='fiscalQuarter']</arg>
<arg>${FiscalQuarter}</arg>
</arguments>
<kw name="Focus" library="SeleniumLibrary">
<doc>Deprecated. Use `Set Focus To Element` instead.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20181210 18:06:46.339" endtime="20181210 18:06:46.368"></status>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${select value}</arg>
</arguments>
<msg timestamp="20181210 18:06:46.369" level="INFO">Selecting options from selection list '//select[@id='fiscalQuarter']' by label 2017-3.</msg>
<status status="PASS" starttime="20181210 18:06:46.369" endtime="20181210 18:06:46.566"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>20s</arg>
</arguments>
<msg timestamp="20181210 18:07:06.568" level="INFO">Slept 20 seconds</msg>
<status status="PASS" starttime="20181210 18:06:46.567" endtime="20181210 18:07:06.568"></status>
</kw>
<status status="PASS" starttime="20181210 18:06:46.338" endtime="20181210 18:07:06.568"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>60s</arg>
</arguments>
<status status="PASS" starttime="20181210 18:07:06.568" endtime="20181210 18:07:06.571"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[contains(text(),'Recalculate')]</arg>
</arguments>
<status status="PASS" starttime="20181210 18:07:06.571" endtime="20181210 18:07:06.605"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[contains(text(),'Recalculate')]</arg>
</arguments>
<msg timestamp="20181210 18:07:06.605" level="INFO">Clicking button '//button[contains(text(),'Recalculate')]'.</msg>
<status status="PASS" starttime="20181210 18:07:06.605" endtime="20181210 18:07:06.999"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>240s</arg>
</arguments>
<msg timestamp="20181210 18:11:06.999" level="INFO">Slept 4 minutes</msg>
<status status="PASS" starttime="20181210 18:07:06.999" endtime="20181210 18:11:07.000"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@data-ng-click="exportScores()"]</arg>
</arguments>
<status status="PASS" starttime="20181210 18:11:07.000" endtime="20181210 18:11:07.054"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[@data-ng-click="exportScores()"]</arg>
</arguments>
<msg timestamp="20181210 18:11:07.055" level="INFO">Clicking button '//button[@data-ng-click="exportScores()"]'.</msg>
<status status="PASS" starttime="20181210 18:11:07.054" endtime="20181210 18:11:07.267"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20181210 18:11:17.269" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20181210 18:11:07.267" endtime="20181210 18:11:17.269"></status>
</kw>
<status status="PASS" starttime="20181210 18:06:46.338" endtime="20181210 18:11:17.269"></status>
</kw>
<kw name="${FiscalQuarter} = 2017-4" type="foritem">
<kw name="Select from FiscalQuarters dropdown by value">
<arguments>
<arg>//select[@id='fiscalQuarter']</arg>
<arg>${FiscalQuarter}</arg>
</arguments>
<kw name="Focus" library="SeleniumLibrary">
<doc>Deprecated. Use `Set Focus To Element` instead.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20181210 18:11:17.271" endtime="20181210 18:11:17.322"></status>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${select value}</arg>
</arguments>
<msg timestamp="20181210 18:11:17.323" level="INFO">Selecting options from selection list '//select[@id='fiscalQuarter']' by label 2017-4.</msg>
<status status="PASS" starttime="20181210 18:11:17.322" endtime="20181210 18:11:17.541"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>20s</arg>
</arguments>
<msg timestamp="20181210 18:11:37.543" level="INFO">Slept 20 seconds</msg>
<status status="PASS" starttime="20181210 18:11:17.542" endtime="20181210 18:11:37.543"></status>
</kw>
<status status="PASS" starttime="20181210 18:11:17.270" endtime="20181210 18:11:37.543"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>60s</arg>
</arguments>
<status status="PASS" starttime="20181210 18:11:37.544" endtime="20181210 18:11:37.549"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[contains(text(),'Recalculate')]</arg>
</arguments>
<status status="PASS" starttime="20181210 18:11:37.549" endtime="20181210 18:11:37.601"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[contains(text(),'Recalculate')]</arg>
</arguments>
<msg timestamp="20181210 18:11:37.601" level="INFO">Clicking button '//button[contains(text(),'Recalculate')]'.</msg>
<status status="PASS" starttime="20181210 18:11:37.601" endtime="20181210 18:11:37.866"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>240s</arg>
</arguments>
<msg timestamp="20181210 18:15:37.867" level="INFO">Slept 4 minutes</msg>
<status status="PASS" starttime="20181210 18:11:37.866" endtime="20181210 18:15:37.867"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@data-ng-click="exportScores()"]</arg>
</arguments>
<status status="PASS" starttime="20181210 18:15:37.868" endtime="20181210 18:15:37.915"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[@data-ng-click="exportScores()"]</arg>
</arguments>
<msg timestamp="20181210 18:15:37.916" level="INFO">Clicking button '//button[@data-ng-click="exportScores()"]'.</msg>
<status status="PASS" starttime="20181210 18:15:37.915" endtime="20181210 18:15:38.143"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20181210 18:15:48.146" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20181210 18:15:38.144" endtime="20181210 18:15:48.146"></status>
</kw>
<status status="PASS" starttime="20181210 18:11:17.270" endtime="20181210 18:15:48.146"></status>
</kw>
<kw name="${FiscalQuarter} = 2018-1" type="foritem">
<kw name="Select from FiscalQuarters dropdown by value">
<arguments>
<arg>//select[@id='fiscalQuarter']</arg>
<arg>${FiscalQuarter}</arg>
</arguments>
<kw name="Focus" library="SeleniumLibrary">
<doc>Deprecated. Use `Set Focus To Element` instead.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20181210 18:15:48.146" endtime="20181210 18:15:48.170"></status>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${select value}</arg>
</arguments>
<msg timestamp="20181210 18:15:48.171" level="INFO">Selecting options from selection list '//select[@id='fiscalQuarter']' by label 2018-1.</msg>
<status status="PASS" starttime="20181210 18:15:48.171" endtime="20181210 18:15:48.420"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>20s</arg>
</arguments>
<msg timestamp="20181210 18:16:08.421" level="INFO">Slept 20 seconds</msg>
<status status="PASS" starttime="20181210 18:15:48.420" endtime="20181210 18:16:08.421"></status>
</kw>
<status status="PASS" starttime="20181210 18:15:48.146" endtime="20181210 18:16:08.421"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>60s</arg>
</arguments>
<status status="PASS" starttime="20181210 18:16:08.421" endtime="20181210 18:16:08.423"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[contains(text(),'Recalculate')]</arg>
</arguments>
<status status="PASS" starttime="20181210 18:16:08.424" endtime="20181210 18:16:08.459"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[contains(text(),'Recalculate')]</arg>
</arguments>
<msg timestamp="20181210 18:16:08.459" level="INFO">Clicking button '//button[contains(text(),'Recalculate')]'.</msg>
<status status="PASS" starttime="20181210 18:16:08.459" endtime="20181210 18:16:08.873"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>240s</arg>
</arguments>
<msg timestamp="20181210 18:20:08.877" level="INFO">Slept 4 minutes</msg>
<status status="PASS" starttime="20181210 18:16:08.873" endtime="20181210 18:20:08.877"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@data-ng-click="exportScores()"]</arg>
</arguments>
<status status="PASS" starttime="20181210 18:20:08.877" endtime="20181210 18:20:08.938"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[@data-ng-click="exportScores()"]</arg>
</arguments>
<msg timestamp="20181210 18:20:08.938" level="INFO">Clicking button '//button[@data-ng-click="exportScores()"]'.</msg>
<status status="PASS" starttime="20181210 18:20:08.938" endtime="20181210 18:20:09.122"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20181210 18:20:19.137" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20181210 18:20:09.122" endtime="20181210 18:20:19.137"></status>
</kw>
<status status="PASS" starttime="20181210 18:15:48.146" endtime="20181210 18:20:19.137"></status>
</kw>
<kw name="${FiscalQuarter} = 2018-2" type="foritem">
<kw name="Select from FiscalQuarters dropdown by value">
<arguments>
<arg>//select[@id='fiscalQuarter']</arg>
<arg>${FiscalQuarter}</arg>
</arguments>
<kw name="Focus" library="SeleniumLibrary">
<doc>Deprecated. Use `Set Focus To Element` instead.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20181210 18:20:19.137" endtime="20181210 18:20:19.190"></status>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${select value}</arg>
</arguments>
<msg timestamp="20181210 18:20:19.191" level="INFO">Selecting options from selection list '//select[@id='fiscalQuarter']' by label 2018-2.</msg>
<status status="PASS" starttime="20181210 18:20:19.190" endtime="20181210 18:20:19.354"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>20s</arg>
</arguments>
<msg timestamp="20181210 18:20:39.366" level="INFO">Slept 20 seconds</msg>
<status status="PASS" starttime="20181210 18:20:19.355" endtime="20181210 18:20:39.366"></status>
</kw>
<status status="PASS" starttime="20181210 18:20:19.137" endtime="20181210 18:20:39.366"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>60s</arg>
</arguments>
<status status="PASS" starttime="20181210 18:20:39.366" endtime="20181210 18:20:39.366"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[contains(text(),'Recalculate')]</arg>
</arguments>
<status status="PASS" starttime="20181210 18:20:39.366" endtime="20181210 18:20:39.444"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[contains(text(),'Recalculate')]</arg>
</arguments>
<msg timestamp="20181210 18:20:39.444" level="INFO">Clicking button '//button[contains(text(),'Recalculate')]'.</msg>
<status status="PASS" starttime="20181210 18:20:39.444" endtime="20181210 18:20:39.695"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>240s</arg>
</arguments>
<msg timestamp="20181210 18:24:39.703" level="INFO">Slept 4 minutes</msg>
<status status="PASS" starttime="20181210 18:20:39.695" endtime="20181210 18:24:39.703"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@data-ng-click="exportScores()"]</arg>
</arguments>
<status status="PASS" starttime="20181210 18:24:39.703" endtime="20181210 18:24:39.781"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[@data-ng-click="exportScores()"]</arg>
</arguments>
<msg timestamp="20181210 18:24:39.781" level="INFO">Clicking button '//button[@data-ng-click="exportScores()"]'.</msg>
<status status="PASS" starttime="20181210 18:24:39.781" endtime="20181210 18:24:39.994"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20181210 18:24:49.996" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20181210 18:24:39.995" endtime="20181210 18:24:49.996"></status>
</kw>
<status status="PASS" starttime="20181210 18:20:19.137" endtime="20181210 18:24:49.996"></status>
</kw>
<kw name="${FiscalQuarter} = 2018-3" type="foritem">
<kw name="Select from FiscalQuarters dropdown by value">
<arguments>
<arg>//select[@id='fiscalQuarter']</arg>
<arg>${FiscalQuarter}</arg>
</arguments>
<kw name="Focus" library="SeleniumLibrary">
<doc>Deprecated. Use `Set Focus To Element` instead.</doc>
<arguments>
<arg>${locator}</arg>
</arguments>
<status status="PASS" starttime="20181210 18:24:49.996" endtime="20181210 18:24:50.057"></status>
</kw>
<kw name="Select From List By Label" library="SeleniumLibrary">
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<arguments>
<arg>${locator}</arg>
<arg>${select value}</arg>
</arguments>
<msg timestamp="20181210 18:24:50.058" level="INFO">Selecting options from selection list '//select[@id='fiscalQuarter']' by label 2018-3.</msg>
<status status="PASS" starttime="20181210 18:24:50.057" endtime="20181210 18:24:50.221"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>20s</arg>
</arguments>
<msg timestamp="20181210 18:25:10.236" level="INFO">Slept 20 seconds</msg>
<status status="PASS" starttime="20181210 18:24:50.221" endtime="20181210 18:25:10.236"></status>
</kw>
<status status="PASS" starttime="20181210 18:24:49.996" endtime="20181210 18:25:10.236"></status>
</kw>
<kw name="Set Selenium Implicit Wait" library="SeleniumLibrary">
<doc>Sets the implicit wait value used by Selenium.</doc>
<arguments>
<arg>60s</arg>
</arguments>
<status status="PASS" starttime="20181210 18:25:10.236" endtime="20181210 18:25:10.236"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[contains(text(),'Recalculate')]</arg>
</arguments>
<status status="PASS" starttime="20181210 18:25:10.236" endtime="20181210 18:25:10.298"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[contains(text(),'Recalculate')]</arg>
</arguments>
<msg timestamp="20181210 18:25:10.298" level="INFO">Clicking button '//button[contains(text(),'Recalculate')]'.</msg>
<status status="PASS" starttime="20181210 18:25:10.298" endtime="20181210 18:25:10.560"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>240s</arg>
</arguments>
<msg timestamp="20181210 18:29:10.565" level="INFO">Slept 4 minutes</msg>
<status status="PASS" starttime="20181210 18:25:10.561" endtime="20181210 18:29:10.565"></status>
</kw>
<kw name="Element Should Be Enabled" library="SeleniumLibrary">
<doc>Verifies that element identified with ``locator`` is enabled.</doc>
<arguments>
<arg>//button[@data-ng-click="exportScores()"]</arg>
</arguments>
<status status="PASS" starttime="20181210 18:29:10.565" endtime="20181210 18:29:10.628"></status>
</kw>
<kw name="Click Button" library="SeleniumLibrary">
<doc>Clicks button identified by ``locator``.</doc>
<arguments>
<arg>//button[@data-ng-click="exportScores()"]</arg>
</arguments>
<msg timestamp="20181210 18:29:10.628" level="INFO">Clicking button '//button[@data-ng-click="exportScores()"]'.</msg>
<status status="PASS" starttime="20181210 18:29:10.628" endtime="20181210 18:29:10.858"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20181210 18:29:20.865" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20181210 18:29:10.858" endtime="20181210 18:29:20.865"></status>
</kw>
<status status="PASS" starttime="20181210 18:24:49.996" endtime="20181210 18:29:20.865"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:44.425" endtime="20181210 18:29:20.865"></status>
</kw>
<status status="PASS" starttime="20181210 17:57:44.228" endtime="20181210 18:29:20.865"></status>
</kw>
<kw name="Verify CSV File Content verification">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>'C:\\Users\\BLR153\\Downloads\\'</arg>
</arguments>
<assign>
<var>${current_dir_path}</var>
</assign>
<msg timestamp="20181210 18:29:20.865" level="INFO">${current_dir_path} = 'C:\Users\BLR153\Downloads\'</msg>
<status status="PASS" starttime="20181210 18:29:20.865" endtime="20181210 18:29:20.865"></status>
</kw>
<kw name="Get Files From Dir" library="ReadFilesinDir">
<arguments>
<arg>${current_dir_path}</arg>
</arguments>
<assign>
<var>${AllFiles}</var>
</assign>
<msg timestamp="20181210 18:29:20.865" level="INFO">${AllFiles} = []</msg>
<status status="PASS" starttime="20181210 18:29:20.865" endtime="20181210 18:29:20.865"></status>
</kw>
<kw name="${File} IN [ @{AllFiles} ]" type="for">
<status status="PASS" starttime="20181210 18:29:20.865" endtime="20181210 18:29:20.865"></status>
</kw>
<status status="PASS" starttime="20181210 18:29:20.865" endtime="20181210 18:29:20.865"></status>
</kw>
<status status="PASS" starttime="20181210 17:56:52.273" endtime="20181210 18:29:20.865" critical="yes"></status>
</test>
<doc>DSA-USA:Operations on Driver Score card bonus screen in admin module</doc>
<status status="PASS" starttime="20181210 17:56:52.257" endtime="20181210 18:29:20.865"></status>
</suite>
<status status="PASS" starttime="20181210 17:56:52.257" endtime="20181210 18:29:20.865"></status>
</suite>
<status status="PASS" starttime="20181210 17:50:10.853" endtime="20181210 18:29:20.880"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="TestSuites">TestSuites</stat>
<stat pass="2" fail="0" id="s1-s1" name="Admin">TestSuites.Admin</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="Admin ScoreCardConfiguration">TestSuites.Admin.Admin ScoreCardConfiguration</stat>
<stat pass="1" fail="0" id="s1-s1-s2" name="Test Upload Files">TestSuites.Admin.Test Upload Files</stat>
<stat pass="1" fail="0" id="s1-s2" name="Bonuses Module">TestSuites.Bonuses Module</stat>
<stat pass="1" fail="0" id="s1-s2-s1" name="Bonuses Tab 03 Driver Score Card">TestSuites.Bonuses Module.Bonuses Tab 03 Driver Score Card</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
